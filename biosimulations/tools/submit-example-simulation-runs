#!/usr/bin/env python3

import argparse
import enum
import json
import os
import requests
import shutil
import subprocess
import tempfile


GET_SIMULATORS_ENDPOINT = 'https://api.biosimulators.{}/simulators/latest'

EXAMPLE_COMBINE_ARCHIVES_BASE_URL = 'https://github.com/biosimulators/Biosimulators_test_suite/raw/{}/examples/'

EXAMPLE_SIMULATIONS_FILENAME = __file__ + '.json'

SUBMIT_SIMULATION_RUN_ENDPOINT = 'https://run.api.biosimulations.{}/run'
EXAMPLE_SIMULATIONS_RUNS_FILENAME = os.path.join(os.path.dirname(__file__),
                                                 '..', 'apps', 'dispatch', 'src', 'app', 'components',
                                                 'simulations', 'browse', 'example-simulations.json')


def main(runbiosimulations_api='dev', biosimulators_api='dev', biosimulators_test_suite_branch='deploy'):
    """ Submit example simulations from the BioSimulators test suite to the runBioSimulations API and
    record their runs to ``example-simulations.json`` within the browse simulations module of the 
    dispatch app so that users can load runs of these simulations as examples.

    Args:
        runbiosimulations_api (:obj:`str`): which deployment of the runBioSimulations API to use (``dev`` or ``org``)
        biosimulators_api (:obj:`str`): which deployment of the BioSimulators API to use (``dev`` or ``org``)
        biosimulators_test_suite_branch (:obj:`str`): branch of the BioSimulators test suite to use (e.g., ``deploy`` or ``dev``).
    """

    # get latest version of each simulator
    response = requests.get(GET_SIMULATORS_ENDPOINT.format(biosimulators_api))
    response.raise_for_status()
    simulator_latest_versions = {
        simulator['id']: simulator['version'] for simulator in response.json()}

    # read simulations
    with open(EXAMPLE_SIMULATIONS_FILENAME, 'r') as file:
        simulations = json.load(file)

    # execution simulations
    temp_dir = tempfile.mkdtemp()
    simulation_runs = []
    for simulation in simulations:
        name = simulation['name']
        simulator = simulation['simulator']
        simulator_version = simulator_latest_versions[simulator]
        url = EXAMPLE_COMBINE_ARCHIVES_BASE_URL.format(biosimulators_test_suite_branch) + simulation['filename']

        # get COMBINE archive
        response = requests.get(url)
        response.raise_for_status()
        archive_filename = os.path.join(
            temp_dir, os.path.basename(simulation['filename']))
        combine_archive = response.content
        with open(archive_filename, 'wb') as file:
            file.write(combine_archive)
        project_size = len(combine_archive)

        # submit simulation
        process = subprocess.run(['curl',
                                  '-X', 'POST', SUBMIT_SIMULATION_RUN_ENDPOINT.format(runbiosimulations_api),
                                  '-H', "accept: application/json",
                                  '-H',  "Content-Type: multipart/form-data",
                                  '-F', "simulationRun=" + json.dumps({
                                      "name": name,
                                      'simulator': simulator,
                                      "simulatorVersion": simulator_version,
                                      "email": None,
                                      "public": False,
                                  }),
                                  '-F', "file=@{}".format(archive_filename)
                                  ], capture_output=True)
        simulation_run = json.loads(process.stdout.decode())

        # log run
        simulation_runs.append({
            "id": simulation_run['id'],
            "name": name,
            'simulator': simulator,
            "simulatorVersion": simulator_version,
            "submittedLocally": False,
            "status": "SUCCEEDED",
            "submitted": simulation_run['submitted'],
            "updated": simulation_run['updated'],
            "projectSize": project_size,
            "runtime": None,
            "resultsSize": None,
            "email": None,
        })

    with open(EXAMPLE_SIMULATIONS_RUNS_FILENAME, 'w') as file:
        json.dump(simulation_runs, file, indent=2)

    shutil.rmtree(temp_dir)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Submit the example simulations to the runBioSimulations API and save their runs to the dispatch app.')
    parser.add_argument(
        '--runbiosimulations-api', type=str, default='dev',
        help='runBioSimulations API which simulations should be submitted to (`dev`, `org`). Default: `dev`.')
    parser.add_argument(
        '--biosimulators-api', type=str, default='dev',
        help=('BioSimulators API which should be used to select the version of each simulation tool used '
              'to execute simulations (`dev`, `org`). Default: `dev`.'))
    parser.add_argument(
        '--biosimulators-test-suite-branch', type=str, default='deploy',
        help='Branch of the BioSimulators test suite from which the example COMBINE/OMEX archives should be obtained.')
    args = parser.parse_args()

    main(runbiosimulations_api=args.runbiosimulations_api,
         biosimulators_api=args.biosimulators_api,
         biosimulators_test_suite_branch=args.biosimulators_test_suite_branch)
