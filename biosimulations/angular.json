{
  "version": 1,
  "projects": {
    "account": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/account",
      "sourceRoot": "apps/account/src",
      "prefix": "biosimulations",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/account",
            "index": "apps/account/src/index.html",
            "main": "apps/account/src/main.ts",
            "polyfills": "apps/account/src/polyfills.ts",
            "tsConfig": "apps/account/tsconfig.app.json",
            "aot": true,
            "assets": [
              {
                "glob": "favicon.svg",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "favicon.ico",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "safari-pinned-tab.svg",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "_redirects",
                "input": "libs/shared/assets/src",
                "output": "./"
              },
              {
                "glob": "**/*",
                "input": "libs/shared/assets/src/assets",
                "output": "assets"
              }
            ],
            "styles": ["libs/shared/styles/src/index.scss"],
            "scripts": ["node_modules/marked/lib/marked.js"],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/styles/src/lib"]
            }
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "libs/shared/environments/src/lib/environment.ts",
                  "with": "libs/shared/environments/src/lib/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "account:build",
            "proxyConfig": "apps/account/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "account:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "account:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/account/tsconfig.app.json",
              "apps/account/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/account/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/account/jest.config.js",
            "tsConfig": "apps/account/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/account/src/test-setup.ts"
          }
        }
      }
    },
    "account-e2e": {
      "root": "apps/account-e2e",
      "sourceRoot": "apps/account-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/account-e2e/cypress.json",
            "tsConfig": "apps/account-e2e/tsconfig.e2e.json",
            "devServerTarget": "account:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "account:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/account-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/account-e2e/**/*"]
          }
        }
      }
    },
    "account-api": {
      "root": "apps/account-api",
      "sourceRoot": "apps/account-api/src",
      "projectType": "application",
      "prefix": "account-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/account-api",
            "main": "apps/account-api/src/main.ts",
            "tsConfig": "apps/account-api/tsconfig.app.json",
            "assets": ["apps/account-api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "libs/shared/environments/src/lib/environment.ts",
                  "with": "libs/shared/environments/src/lib/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "account-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/account-api/tsconfig.app.json",
              "apps/account-api/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/account-api/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/account-api/jest.config.js",
            "tsConfig": "apps/account-api/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "shared-assets": {
      "projectType": "library",
      "root": "libs/shared/assets",
      "sourceRoot": "libs/shared/assets/src",
      "prefix": "biosimulations",
      "architect": {},
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-styles": {
      "projectType": "library",
      "root": "libs/shared/styles",
      "sourceRoot": "libs/shared/styles/src",
      "prefix": "biosimulations",
      "architect": {},
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-ui": {
      "projectType": "library",
      "root": "libs/shared/ui",
      "sourceRoot": "libs/shared/ui/src",
      "prefix": "biosimulations",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/shared/ui/tsconfig.lib.json",
              "libs/shared/ui/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/ui/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/jest.config.js",
            "tsConfig": "libs/shared/ui/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/shared/ui/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-icons": {
      "projectType": "library",
      "root": "libs/shared/icons",
      "sourceRoot": "libs/shared/icons/src",
      "prefix": "biosimulations",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/shared/icons/tsconfig.lib.json",
              "libs/shared/icons/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/icons/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/icons/jest.config.js",
            "tsConfig": "libs/shared/icons/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/shared/icons/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-debug": {
      "projectType": "library",
      "root": "libs/shared/debug",
      "sourceRoot": "libs/shared/debug/src",
      "prefix": "biosimulations",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/shared/debug/tsconfig.lib.json",
              "libs/shared/debug/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/debug/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/debug/jest.config.js",
            "tsConfig": "libs/shared/debug/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/shared/debug/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "dispatch": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/dispatch",
      "sourceRoot": "apps/dispatch/src",
      "prefix": "biosimulations",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/dispatch",
            "index": "apps/dispatch/src/index.html",
            "main": "apps/dispatch/src/main.ts",
            "polyfills": "apps/dispatch/src/polyfills.ts",
            "tsConfig": "apps/dispatch/tsconfig.app.json",
            "aot": true,
            "assets": [
              {
                "glob": "favicon.svg",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "favicon.ico",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "safari-pinned-tab.svg",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "_redirects",
                "input": "libs/shared/assets/src",
                "output": "./"
              },
              {
                "glob": "**/*",
                "input": "libs/shared/assets/src/assets",
                "output": "assets"
              },
              "apps/dispatch/src/assets"
            ],
            "styles": ["libs/shared/styles/src/index.scss"],
            "scripts": ["node_modules/plotly.js/dist/plotly.min.js"],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/styles/src/lib"]
            }
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "libs/shared/environments/src/lib/environment.ts",
                  "with": "libs/shared/environments/src/lib/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "7mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "dispatch:build",
            "proxyConfig": "apps/dispatch/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "dispatch:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "dispatch:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/dispatch/tsconfig.app.json",
              "apps/dispatch/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/dispatch/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/dispatch/jest.config.js",
            "tsConfig": "apps/dispatch/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/dispatch/src/test-setup.ts"
          }
        }
      }
    },
    "dispatch-e2e": {
      "root": "apps/dispatch-e2e",
      "sourceRoot": "apps/dispatch-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/dispatch-e2e/cypress.json",
            "tsConfig": "apps/dispatch-e2e/tsconfig.e2e.json",
            "devServerTarget": "dispatch:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "dispatch:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/dispatch-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/dispatch-e2e/**/*"]
          }
        }
      }
    },
    "auth-common": {
      "root": "libs/auth/common",
      "sourceRoot": "libs/auth/common/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/auth/common/tsconfig.lib.json",
              "libs/auth/common/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/auth/common/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/auth/common/jest.config.js",
            "tsConfig": "libs/auth/common/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "auth-angular": {
      "projectType": "library",
      "root": "libs/auth/angular",
      "sourceRoot": "libs/auth/angular/src",
      "prefix": "biosimulations",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/auth/angular/tsconfig.lib.json",
              "libs/auth/angular/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/auth/angular/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/auth/angular/jest.config.js",
            "tsConfig": "libs/auth/angular/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/auth/angular/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "auth-nest": {
      "root": "libs/auth/nest",
      "sourceRoot": "libs/auth/nest/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/auth/nest/tsconfig.lib.json",
              "libs/auth/nest/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/auth/nest/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/auth/nest/jest.config.js",
            "tsConfig": "libs/auth/nest/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "config-common": {
      "root": "libs/config/common",
      "sourceRoot": "libs/config/common/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/config/common/tsconfig.lib.json",
              "libs/config/common/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/config/common/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/config/common/jest.config.js",
            "tsConfig": "libs/config/common/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "config-nest": {
      "root": "libs/config/nest",
      "sourceRoot": "libs/config/nest/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/config/nest/tsconfig.lib.json",
              "libs/config/nest/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/config/nest/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/config/nest/jest.config.js",
            "tsConfig": "libs/config/nest/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "config-angular": {
      "projectType": "library",
      "root": "libs/config/angular",
      "sourceRoot": "libs/config/angular/src",
      "prefix": "biosimulations",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/config/angular/tsconfig.lib.json",
              "libs/config/angular/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/config/angular/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/config/angular/jest.config.js",
            "tsConfig": "libs/config/angular/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/config/angular/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "shared-datamodel": {
      "root": "libs/shared/datamodel",
      "sourceRoot": "libs/shared/datamodel/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/shared/datamodel/tsconfig.lib.json",
              "libs/shared/datamodel/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/datamodel/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/datamodel/jest.config.js",
            "tsConfig": "libs/shared/datamodel/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "platform-api": {
      "root": "apps/platform-api",
      "sourceRoot": "apps/platform-api/src",
      "projectType": "application",
      "prefix": "platform-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/platform-api",
            "main": "apps/platform-api/src/main.ts",
            "tsConfig": "apps/platform-api/tsconfig.app.json",
            "assets": ["apps/platform-api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "libs/shared/environments/src/lib/environment.ts",
                  "with": "libs/shared/environments/src/lib/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "platform-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/platform-api/tsconfig.app.json",
              "apps/platform-api/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/platform-api/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/platform-api/jest.config.js",
            "tsConfig": "apps/platform-api/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "platform-api-models": {
      "root": "libs/platform/api-models",
      "sourceRoot": "libs/platform/api-models/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/platform/api-models/tsconfig.lib.json",
              "libs/platform/api-models/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/platform/api-models/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/platform/api-models/jest.config.js",
            "tsConfig": "libs/platform/api-models/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "platform-database-models": {
      "root": "libs/platform/database-models",
      "sourceRoot": "libs/platform/database-models/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/platform/database-models/tsconfig.lib.json",
              "libs/platform/database-models/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/platform/database-models/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/platform/database-models/jest.config.js",
            "tsConfig": "libs/platform/database-models/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "dispatch-service": {
      "root": "apps/dispatch-service",
      "sourceRoot": "apps/dispatch-service/src",
      "projectType": "application",
      "prefix": "dispatch-service",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/dispatch-service",
            "main": "apps/dispatch-service/src/main.ts",
            "tsConfig": "apps/dispatch-service/tsconfig.app.json",
            "assets": ["apps/dispatch-service/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "libs/shared/environments/src/lib/environment.ts",
                  "with": "libs/shared/environments/src/lib/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "dispatch-service:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/dispatch-service/tsconfig.app.json",
              "apps/dispatch-service/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/dispatch-service/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/dispatch-service/jest.config.js",
            "tsConfig": "apps/dispatch-service/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "dispatch-api": {
      "root": "apps/dispatch-api",
      "sourceRoot": "apps/dispatch-api/src",
      "projectType": "application",
      "prefix": "dispatch-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/dispatch-api",
            "main": "apps/dispatch-api/src/main.ts",
            "tsConfig": "apps/dispatch-api/tsconfig.app.json",
            "assets": ["apps/dispatch-api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "libs/shared/environments/src/lib/environment.ts",
                  "with": "libs/shared/environments/src/lib/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "dispatch-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/dispatch-api/tsconfig.app.json",
              "apps/dispatch-api/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/dispatch-api/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/dispatch-api/jest.config.js",
            "tsConfig": "apps/dispatch-api/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "platform": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/platform",
      "sourceRoot": "apps/platform/src",
      "prefix": "biosimulations",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/platform",
            "index": "apps/platform/src/index.html",
            "main": "apps/platform/src/main.ts",
            "polyfills": "apps/platform/src/polyfills.ts",
            "tsConfig": "apps/platform/tsconfig.app.json",
            "aot": true,
            "assets": [
              {
                "glob": "favicon.svg",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "favicon.ico",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "safari-pinned-tab.svg",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "_redirects",
                "input": "libs/shared/assets/src",
                "output": "./"
              },
              {
                "glob": "**/*",
                "input": "libs/shared/assets/src/assets",
                "output": "assets"
              },
              "apps/platform/src/manifest.webmanifest",
              "apps/platform/src/browserconfig.xml"
            ],
            "styles": ["libs/shared/styles/src/index.scss"],
            "scripts": ["node_modules/marked/lib/marked.js"],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/styles/src/lib"]
            }
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "libs/shared/environments/src/lib/environment.ts",
                  "with": "libs/shared/environments/src/lib/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "platform:build",
            "proxyConfig": "apps/platform/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "platform:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "platform:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "tsConfig": [
              "apps/platform/tsconfig.app.json",
              "apps/platform/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/platform/**/*"],
            "linter": "eslint"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/platform/jest.config.js",
            "tsConfig": "apps/platform/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/platform/src/test-setup.ts"
          }
        }
      }
    },
    "platform-e2e": {
      "root": "apps/platform-e2e",
      "sourceRoot": "apps/platform-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/platform-e2e/cypress.json",
            "tsConfig": "apps/platform-e2e/tsconfig.e2e.json",
            "devServerTarget": "platform:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "platform:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/platform-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/platform-e2e/**/*"]
          }
        }
      }
    },
    "platform-view": {
      "projectType": "library",
      "root": "libs/platform/view",
      "sourceRoot": "libs/platform/view/src",
      "prefix": "biosimulations",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "tsConfig": [
              "libs/platform/view/tsconfig.lib.json",
              "libs/platform/view/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/platform/view/**/*"],
            "linter": "eslint"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/platform/view/jest.config.js",
            "tsConfig": "libs/platform/view/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/platform/view/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "simulators": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/simulators",
      "sourceRoot": "apps/simulators/src",
      "prefix": "biosimulations",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/simulators",
            "index": "apps/simulators/src/index.html",
            "main": "apps/simulators/src/main.ts",
            "polyfills": "apps/simulators/src/polyfills.ts",
            "tsConfig": "apps/simulators/tsconfig.app.json",
            "aot": true,
            "assets": [
              {
                "glob": "favicon.svg",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "favicon.ico",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "safari-pinned-tab.svg",
                "input": "libs/shared/assets/src/assets/icons",
                "output": "./"
              },
              {
                "glob": "_redirects",
                "input": "libs/shared/assets/src",
                "output": "./"
              },
              {
                "glob": "**/*",
                "input": "libs/shared/assets/src/assets",
                "output": "assets"
              }
            ],
            "styles": ["libs/shared/styles/src/index.scss"],
            "scripts": ["node_modules/marked/lib/marked.js"],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/styles/src/lib"]
            }
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "libs/shared/environments/src/lib/environment.ts",
                  "with": "libs/shared/environments/src/lib/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "simulators:build",
            "proxyConfig": "apps/simulators/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "simulators:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "simulators:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "tsConfig": [
              "apps/simulators/tsconfig.app.json",
              "apps/simulators/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/simulators/**/*"],
            "linter": "eslint"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/simulators/jest.config.js",
            "tsConfig": "apps/simulators/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/simulators/src/test-setup.ts"
          }
        }
      }
    },
    "simulators-e2e": {
      "root": "apps/simulators-e2e",
      "sourceRoot": "apps/simulators-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/simulators-e2e/cypress.json",
            "tsConfig": "apps/simulators-e2e/tsconfig.e2e.json",
            "devServerTarget": "simulators:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "simulators:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/simulators-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/simulators-e2e/**/*"]
          }
        }
      }
    },
    "simulators-api": {
      "root": "apps/simulators-api",
      "sourceRoot": "apps/simulators-api/src",
      "projectType": "application",
      "prefix": "simulators-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/simulators-api",
            "main": "apps/simulators-api/src/main.ts",
            "tsConfig": "apps/simulators-api/tsconfig.app.json",
            "assets": ["apps/simulators-api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "libs/shared/environments/src/lib/environment.ts",
                  "with": "libs/shared/environments/src/lib/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "simulators-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/simulators-api/tsconfig.app.json",
              "apps/simulators-api/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/simulators-api/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/simulators-api/jest.config.js",
            "tsConfig": "apps/simulators-api/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "simulators-api-models": {
      "root": "libs/simulators/api-models",
      "sourceRoot": "libs/simulators/api-models/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/simulators/api-models/tsconfig.lib.json",
              "libs/simulators/api-models/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/simulators/api-models/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/simulators/api-models/jest.config.js",
            "tsConfig": "libs/simulators/api-models/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "shared-environments": {
      "projectType": "library",
      "root": "libs/shared/environments",
      "sourceRoot": "libs/shared/environments/src",
      "prefix": "biosimulations",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/shared/environments/tsconfig.lib.json",
              "libs/shared/environments/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/environments/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/environments/jest.config.js",
            "tsConfig": "libs/shared/environments/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/shared/environments/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "dispatch-datamodel": {
      "root": "libs/dispatch/datamodel",
      "sourceRoot": "libs/dispatch/datamodel/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/dispatch/datamodel/tsconfig.lib.json",
              "libs/dispatch/datamodel/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/dispatch/datamodel/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/dispatch/datamodel/jest.config.js",
            "tsConfig": "libs/dispatch/datamodel/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/angular"
  },
  "schematics": {
    "@nrwl/workspace": {
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/cypress": {
      "cypress-project": {
        "linter": "eslint"
      }
    },
    "@nrwl/node": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/nest": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/express": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/angular:application": {
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress",
      "strict": true,
      "style": "scss"
    },
    "@nrwl/angular:library": {
      "unitTestRunner": "jest",
      "strict": true,
      "style": "scss"
    }
  },
  "defaultProject": "platform"
}
