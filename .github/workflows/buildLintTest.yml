name: Build, Lint, Test
on:
  workflow_call:
    inputs:
      env:
        required: false
        type: string
        default: "dev"
      name:
        required: false
        type: string
        default: "CI"
      upload:
        required: false
        type: boolean
        default: true
      affectedOnly:
        required: false
        type: boolean
        default: true
      pushDockerImages:
        required: false
        type: boolean
        default: true

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  INPUT_PUSH: ${{ inputs.pushDockerImages }}

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        name: Checkout [dev]
        with:
          fetch-depth: 0

      - uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'dev'

      - name: Set Branch Environment
        if: ${{ github.event_name == 'push' }}
        run: echo NX_BRANCH=$GITHUB_REF >> $GITHUB_ENV

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install Flake8
        run: |
          python -m pip install flake8

      - name: Install npm dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true

      - run: npx nx-cloud start-ci-run
        name: Start CI Run
        if: always()

      - run: npx nx affected --target=lint --parallel & P1=$! npx nx affected --target=build --prod --parallel & P2=$! npx nx affected --target=test --parallel & P3=$! && wait $P1 $P2 $P3
        name: Lint Build Test Affected
        if:  ${{inputs.affectedOnly}}

      - run:  npx nx run-many --all --target=lint --parallel & P1=$! npx nx run-many --all --target=build --prod --parallel & P2=$! npx nx run-many --all --target=test --parallel & P3=$! && wait $P1 $P2 $P3
        name: Lint Build Test All
        if: ${{!inputs.affectedOnly}}

      - name: Stop CI run
        run: npx nx-cloud stop-all-agents
        if:  always()

      - name: Upload builds
        uses: actions/upload-artifact@v2
        if: ${{inputs.upload}}
        with:
          name: ${{inputs.name}}
          path: dist/
          retention-days: 5
          if-no-files-found: ${{ fromJSON('["warn", "error"]')[!inputs.affectedOnly]}}

  agents:
    runs-on: ubuntu-latest
    name: Worker Node
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install Flake8
        run: |
          python -m pip install flake8

      - name: Install npm dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true

      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
