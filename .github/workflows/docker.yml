name: Docker
on:
  workflow_call:
    secrets:
      GHCR_USERNAME:
        required: true
      GHCR_TOKEN:
        required: true
    inputs:
      push:
        required: false
        type: boolean
        default: true
      apps:
        required: false
        type: string
        default: "[\"api\",\"simulators-api\",\"dispatch-service\",\"mail-service\",\"combine-api\", \"account-api\"]"
jobs:
  build:
    services:
      nats:
        image: nats
        ports:
          - 4222:4222
      redis:
        image: redis
        ports:
          - 6379:6379
      mongo:
        image: mongo
        ports:
          - 27017:27017
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: ${{fromJSON(inputs.apps)}}

    steps:
      - name: Checkout [dev]
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          fetch-depth: 0

      - name: Checkout [pr]
        uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install npm dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: 'ghcr.io'
          username: "${{ secrets.GHCR_USERNAME }}"
          password: "${{ secrets.GHCR_TOKEN }}"

      - name: Build Docker Image
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_PUSH: ${{ inputs.push }}
        run: npx nx docker ${{matrix.app}}
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{format('ghcr.io/biosimulations/{0}', matrix.app)}}
          tags: |
            type=sha
         
      - name: Start Docker Image
        env:
          app: ${{matrix.app}}
          image: ${{steps.meta.outputs.tags[0]}}
          NATS_HOST: 127.0.0.1:4222
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
          MANAGEMENT_DOMAIN: crbmdev.auth0.com
          MANAGEMENT_ID: TEST_MANAGEMENT_ID
          MANAGEMENT_SECRET: TEST_MANAGEMENT_SECRET

        run: docker run -d --name ${{matrix.app}} --network=host -e NATS_HOST -e REDIS_HOST -e REDIS_PORT -e MANAGEMENT_DOMAIN -e MANAGEMENT_ID -e MANAGEMENT_SECRET ${{env.image}}

      - name: Wait for Docker Image to start
        run: sleep 10

      - name: Confirm Docker Image is Running
        run: if [ $(docker inspect -f '{{.State.Running}}' ${{matrix.app}}) = "true" ]; then exit 0; else docker logs ${{matrix.app}} && exit 1; fi
      - name: Stop Docker Image
        if: always()
        run: docker stop ${{matrix.app}}
