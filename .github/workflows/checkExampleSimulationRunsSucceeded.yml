name: Check example simulation runs succeeded
on:
  schedule:
    - cron: '0 0 * * 0' # weekly
  workflow_dispatch:

jobs:
  check:
    strategy:
      fail-fast: false
      matrix: 
        deployment: ["dev", "prod"]
    name: Check example simulation runs succeeded
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.4.2
        with:
          fetch-depth: 1
          token: ${{ secrets.GH_ACCESS_TOKEN}}

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install required Python packages
        run: python -m pip install -r ${GITHUB_WORKSPACE}/tools/check-example-simulation-runs-succeeded.requirements.txt

      - id: check-runs
        name: Check example simulation runs succeeded
        run: |
          set +e
          deploymentOutput=$(python ${GITHUB_WORKSPACE}/tools/check-example-simulation-runs-succeeded --runbiosimulations-deployment ${{matrix.deployment}} 2>&1)
          status=$?
          echo "$deploymentOutput"

          echo "deploymentOutput<<EOF" >> $GITHUB_ENV
          echo "$deploymentOutput" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          exit $status

      - id: create-issue 
        uses: JasonEtco/create-an-issue@v2
        if: failure()
        env:
          OUTPUT: ${{ env.deploymentOutput }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          update_existing: true
          search_existing: "open"
          filename: ".github/actions/check-example-simulation-runs-succeeded/issue-template.md"

      - name: Print message
        if: failure()
        run: |
          echo "Created issue ${{ steps.create-issue.outputs.number }} (${{ steps.create-issue.outputs.url }})"
