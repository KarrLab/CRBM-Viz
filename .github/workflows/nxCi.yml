name: CI
on:
  push:
    branches:
      - dev
  pull_request:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        name: Checkout [dev]
        with:
          fetch-depth: 0

      - uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'dev'

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install Flake8
        run: |
          python -m pip install flake8

      - name: Install npm dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true

      - run: npx nx-cloud start-ci-run
      - run: npx nx affected --target=build --parallel --max-parallel=2
      
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        name: Checkout [dev]
        with:
          fetch-depth: 0

      - uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'dev'

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install Flake8
        run: |
          python -m pip install flake8

      - name: Install npm dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true

      - run: npx nx-cloud start-ci-run
      - run: npx nx affected --target=test --parallel --max-parallel=10
      

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        name: Checkout [dev]
        with:
          fetch-depth: 0

      - uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'dev'

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install Flake8
        run: |
          python -m pip install flake8

      - name: Install npm dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true

      - run: npx nx-cloud start-ci-run
      - run: npx nx affected --target lint --parallel --max-parallel=2
  StopAllAgents:
    runs-on: ubuntu-latest
    needs: [build, test, lint]
    if: always
    steps:
      - uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        name: Checkout [dev]
        with:
          fetch-depth: 0

      - uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'dev'

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install Flake8
        run: |
          python -m pip install flake8

      - name: Install npm dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true

      - run: npx nx-cloud start-ci-run
      - run: npx nx affected --target lint --parallel --max-parallel=2
      
  agents:
    runs-on: ubuntu-latest
    name: Worker Node
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install Flake8
        run: |
          python -m pip install flake8

      - name: Install npm dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCRB
        uses: docker/login-action@v1
        with:
          registry: 'ghcr.io'
          username: "${{ secrets.GHCR_USERNAME }}"
          password: "${{ secrets.GHCR_TOKEN }}"          

      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
