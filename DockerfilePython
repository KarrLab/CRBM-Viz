#############
### base ###
#############
FROM python:3.9-buster as base

###################################
# install AMICI
RUN apt-get update -y \
    && apt-get install --no-install-recommends -y \
        g++ \
        libatlas-base-dev \
        swig \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

###################################
# install BioNetGen
ARG BIONETGEN_VERSION=2.6.0
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        perl \
        tar \
        wget \
    \
    && cd /tmp \
    && wget https://github.com/RuleWorld/bionetgen/releases/download/BioNetGen-${BIONETGEN_VERSION}/BioNetGen-${BIONETGEN_VERSION}-linux.tgz \
    && tar xvvf BioNetGen-${BIONETGEN_VERSION}-linux.tgz \
    && mv BioNetGen-${BIONETGEN_VERSION}/ /opt/ \
    \
    && rm BioNetGen-${BIONETGEN_VERSION}-linux.tgz \
    \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*
ENV PATH=${PATH}:/opt/BioNetGen-${BIONETGEN_VERSION}/

###################################
# Install BoolNet
BOOLNET_VERSION=2.1.5
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        r-base \
        build-essential \
        gcc \
        gfortran \
        libblas-dev \
        libcurl4-openssl-dev \
        libgit2-dev \
        liblapack-dev \
        libssl-dev \
        libxml2 \
        libxml2-dev \
    \
    && Rscript \
        -e "install.packages('devtools')" \
        -e "require(devtools)" \
        -e "install_version('BoolNet', version='${BOOLNET_VERSION}')" \
        -e "require('BoolNet')" \
    \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

###################################
# Install requirements for CBMPy
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        gcc \
        libglpk-dev \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

###################################
# Install requirements for GillesPy2
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        build-essential \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

###################################
# Set up path for GINsim; needed up installation of GINsim Python package is fixed
RUN mkdir -p /usr/share/man/man1/ \
    && apt-get update -y \
    && apt-get install -y --no-install-recommends \
        default-jre \
        wget \
    \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

###################################
# install libSBMLSIM
ARG LSBMLSIM_VERSION=1.4.0
ARG LIBSBML_VERSION=5.19.0

# install libSBML
RUN apt-get update -y \
    && apt-get install --no-install-recommends -y \
        wget \
        libxml2 \
    \
    && wget https://master.dl.sourceforge.net/project/sbml/libsbml/${LIBSBML_VERSION}/stable/Linux/64-bit/libSBML-${LIBSBML_VERSION}-Linux-x64.deb \
    && dpkg -i libSBML-${LIBSBML_VERSION}-Linux-x64.deb \
    && rm libSBML-${LIBSBML_VERSION}-Linux-x64.deb \
    && export LD_LIBRARY_PATH=/usr/lib64:$LD_LIBRARY_PATH \
    \    
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*
ENV LD_LIBRARY_PATH=/usr/lib64:$LD_LIBRARY_PATH

# install LibSBMLSim
RUN apt-get update -y \
    && apt-get install --no-install-recommends -y \
        wget \
        build-essential \
        cmake \
        swig \
        libbz2-dev \
    \
    && cd /tmp \
    && wget https://github.com/libsbmlsim/libsbmlsim/archive/refs/tags/v${LSBMLSIM_VERSION}.tar.gz \
    && tar xvvf v${LSBMLSIM_VERSION}.tar.gz \
    && cd libsbmlsim-${LSBMLSIM_VERSION} \
    && mkdir build \
    && cd build \
    && cmake \
        -D LIBSBML_INCLUDE_DIR=/usr/include \
        -D LIBSBML_LIBRARY=/usr/lib64/libsbml.so \
        -D WITH_PYTHON=ON \
        .. \
    && make \
    && make install \
    && cd /tmp \
    && rm v${LSBMLSIM_VERSION}.tar.gz \
    && rm -r libsbmlsim-${LSBMLSIM_VERSION} \
    \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

###################################
# install requirements for MASSpy
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        git \
        gcc \
        build-essential \
        libfreetype6-dev \
        libfreetype6 \
        pkg-config \
    \
    && pip install numpy==1.19.3 \
    && pip install matplotlib==3.2 \
    && pip install masspy \
    \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

###################################
# install requirements for pyNeuroML, LEMS
RUN mkdir -p /usr/share/man/man1/ \
    && apt-get update -y \
    && apt-get install -y --no-install-recommends \
        default-jre \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

###################################
# Install requirements for PySCeS

# install SUNDIALS
ARG SUNDIALS_VERSION=2.6.2
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        wget \
        cmake \
        make \
        g++ \
    \
    && cd /tmp \
    && wget https://computing.llnl.gov/sites/default/files/inline-files/sundials-${SUNDIALS_VERSION}.tar.gz \
    && tar xvvf sundials-${SUNDIALS_VERSION}.tar.gz \
    && cd sundials-${SUNDIALS_VERSION} \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make \
    && make install \
    \
    && cd /tmp \
    && rm sundials-${SUNDIALS_VERSION}.tar.gz \
    && rm -r sundials-${SUNDIALS_VERSION} \
    \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists

# install Python requirements for assimulo
RUN pip install cython numpy scipy matplotlib

ARG ASSIMULO_VERSION=3.2.5
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        g++ \
        gfortran \
        liblas-dev \
        liblapack-dev \
        git \
    \
    && pip install git+https://github.com/modelon-community/Assimulo.git@Assimulo-${ASSIMULO_VERSION} \
    \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists

# install Python requirements for PySCeS
RUN pip install ipyparallel

# install PySCeS
ARG PYSCES_REVISION=470cd0b8afa4c14721a2b2bc00d4c71d80603801
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        git \
        gcc \
        gfortran \
        libgfortran-7-dev \
    \
    && pip install git+https://github.com/PySCeS/pysces.git@${PYSCES_REVISION} \
    \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists

###################################
# Install requirements for tellurium
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        libxml2 \
        libncurses5 \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

###################################
# install XPP
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        wget \
        make \
        gcc \
        libx11-dev \
        libc6-dev \
        libx11-6 \
        libc6 \
    \
    && cd /tmp \
    && wget http://www.math.pitt.edu/~bard/bardware/xppaut_latest.tar.gz \
    && mkdir xpp \
    && tar zxvf xppaut_latest.tar.gz --directory xpp \
    && cd xpp \
    && make \
    && make install \
    \
    && cd /tmp \
    && rm xppaut_latest.tar.gz \
    && rm -r xpp \
    \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

###################################
# setup headless for NEURON, Smoldyn
RUN apt-get -y update \
    \
    && apt-get install --no-install-recommends -y \
        xvfb \
    && mkdir /tmp/.X11-unix \
    && chmod 1777 /tmp/.X11-unix \
    \
    && rm -rf /var/lib/apt/lists/*
COPY tools/xvfb-startup.sh /xvfb-startup.sh
ENV XVFB_RES="1920x1080x24" \
    XVFB_ARGS="" \
    DISPLAY=":1"

###################################
# configure matplotlib cache and config to avoid warnings
RUN mkdir -p /.cache/matplotlib \
    && mkdir -p /.config/matplotlib \
    && chmod ugo+rw /.config/matplotlib \
    && chmod ugo+rw /.cache/matplotlib

# Configure default simulator options
ENV ALGORITHM_SUBSTITUTION_POLICY=SIMILAR_VARIABLES \
    VERBOSE=0 \
    MPLBACKEND=PDF \
    PLOTTING_ENGINE=matplotlib

#The name of the app to build
ARG app
ENV APP=$app
RUN echo building ${APP}
#############
### build ###
#############
FROM base as build

WORKDIR /app

# Copy over dependency list
COPY Pipfile /app/Pipfile
COPY Pipfile.lock /app/Pipfile.lock

RUN pip install pipenv
RUN pipenv install
RUN pipenv install matplotlib \
    && pipenv run python -c "import matplotlib.font_manager"

RUN cd /tmp \
    && pipenv install ginsim \
    && wget https://raw.githubusercontent.com/GINsim/GINsim-python/master/ginsim_setup.py \
    && pipenv run python ginsim_setup.py \
    && rm ginsim_setup.py
ENV PATH=/usr/local/share/colomoto/bin:$PATH

COPY apps/$APP/src/ /app/src/

LABEL \
    org.opencontainers.image.title="BioSimulations ${APP}" \
    org.opencontainers.image.description="Docker image for the BioSimulations ${APP} app" \
    org.opencontainers.image.url="https://biosimulations.org/" \
    org.opencontainers.image.documentation="https://biosimulations.org/help" \
    org.opencontainers.image.source="https://github.com/biosimulations/Biosimulations" \
    org.opencontainers.image.authors="BioSimulations Team <info@biosimulations.org>" \
    org.opencontainers.image.vendor="BioSimulations Team" \
    org.opencontainers.image.licenses="MIT"
EXPOSE 3333
CMD /bin/bash /xvfb-startup.sh pipenv run gunicorn -b 0.0.0.0:3333  src.app:app