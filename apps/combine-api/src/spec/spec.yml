---
openapi: 3.0.0
info:
  title: BioSimulations COMBINE API
  version: "0.1"
  description: |-
    Endpoints for working with models (e.g., [CellML](https://cellml.org/), [SBML](http://sbml.org/)), simulation experiments (e.g., [Simulation Experiment Description Language (SED-ML)](https://sed-ml.org/)), metadata ([OMEX Metadata](https://sys-bio.github.io/libOmexMeta/)), and simulation projects ([COMBINE/OMEX archives](https://combinearchive.org/)).

    Note, this API may change significantly in the future.
  contact:
    name: BioSimulations Team
    url: https://biosimulations.org
    email: info@biosimulations.org
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
servers:
- url: https://combine.api.biosimulations.dev
  description: Development server
- url: https://combine.api.biosimulations.org
  description: Production server
paths:
  /kisao/get-similar-algorithms:
    get:
      tags:
      - Simulation algorithms
      parameters:
      - examples:
          CVODE:
            value: KISAO_0000019
        name: algorithms
        description: KiSOA id of the algorithm to find similar algorithms for.
        schema:
          type: array
          items:
            type: string
        in: query
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KisaoAlgorithmSubstitution'
              examples:
                CVODE can be substituted:
                  value:
                  - _type: KisaoAlgorithmSubstitution
                    algorithm:
                    - _type: KisaoTerm
                      id: KISAO_0000019
                      name: CVODE
                    - _type: KisaoTerm
                      id: KISAO_0000088
                      name: LSODA
                    maxPolicy:
                      _type: KisaoAlgorithmSubstitutionPolicy
                      id: DISTINCT_APPROXIMATIONS
                      name: Distinct approximations
                      level: 4
          description: List of the algorithms that are similar to the target algorithm.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to get similar algorithms because the argument is not
            an id of a valid algorithm term.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.kisao.get_similar_algorithms.handler
      summary: Get a list of algorithms similar to an algorithm
  /run/simulators:
    get:
      tags:
      - Simulation execution
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Simulator'
              examples:
                COPASI and tellurium:
                  value:
                  - _type: Simulator
                    id: copasi
                    name: COPASI
                    version: 4.33.246
                    api:
                      _type: SimulatorApi
                      package: biosimulators_copasi
                      module: biosimulators_copasi
                      version: 0.1.0
                    specs: https://api.biosimulators.org/simulators/copasi/4.33.246
                  - _type: Simulator
                    id: tellurium
                    name: tellurium
                    version: 2.2.1
                    api:
                      _type: SimulatorApi
                      package: biosimulators_tellurium
                      module: biosimulators_tellurium
                      version: 0.1.0
                    specs: https://api.biosimulators.org/simulators/tellurium/2.2.1
          description: "Ids, vesions, and properties of simulators available to execute\
            \ COMBINE/OMEX archives."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to get the specifications of the SED outputs for COMBINE/OMEX
            archive because the URL is unavailable or the URL is not a valid COMBINE/OMEX
            archive.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.run.get_simulators.handler
      summary: Get the simulators available to execute COMBINE/OMEX archives
      description: "Get the ids, vesions, and properties of simulators available to\
        \ execute COMBINE/OMEX archives."
  /health:
    get:
      tags:
      - Health
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
              examples:
                Healthy:
                  value:
                    status: ok
          description: The service is operational.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
        "503":
          description: The service is unavailable.
      operationId: src.handlers.health.handler
      summary: Get information about the status of the service.
      description: Get information about whether the service is up or down.
  /combine/create:
    post:
      requestBody:
        description: Specifiations for the COMBINE/OMEX archive and its contents (specifications
          of the SED-ML file and model file(s)).
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CombineArchiveSpecsAndFiles'
            examples:
              Example specifications for a COMBINE archive and files to be included in the archive:
                value:
                  specs:
                    _type: CombineArchive
                    contents:
                    - _type: CombineArchiveContent
                      location:
                        _type: CombineArchiveLocation
                        path: experiment1/model.xml
                        value:
                          _type: CombineArchiveContentFile
                          filename: model.xml
                      format: http://identifiers.org/combine.specifications/sbml
                      master: false
                    - _type: CombineArchiveContent
                      location:
                        _type: CombineArchiveLocation
                        path: experiment1/simulation.sedml
                        value:
                          _type: CombineArchiveContentUrl
                          url: https://simulation.org/simulation.sedml
                      format: http://identifiers.org/combine.specifications/sed-ml
                      master: true
                  files:
                  - <FILE>
            encoding:
              specs:
                contentType: application/json
        required: true
      tags:
      - Simulation projects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Url'
              examples:
                Example URL for a COMBINE archive:
                  value: '"https://data.biosimulations.org/XYZ"'
            application/zip:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                COMBINE/OMEX archive:
                  value: '"<FILE>"'
          description: URL for the created COMBINE/OMEX archive.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Specifications for COMBINE archive are invalid.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.combine.create.handler
      summary: Assemble a COMBINE/OMEX archive from model files and specifications
        of a SED-ML document.
      description: Assemble a COMBINE/OMEX archive from model files and specifications
        of a SED-ML document.
  /combine/validate:
    post:
      requestBody:
        description: COMBINE/OMEX archive file or URL for a COMBINE/OMEX archive file.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidateCombineArchiveFileOrUrl'
            examples:
              FIle:
                value:
                  file: <FILE>
        required: true
      tags:
      - Simulation projects
      - Validation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
              examples:
                Valid archive:
                  value:
                    _type: ValidationReport
                    status: valid
                Invalid archive:
                  value:
                    _type: ValidationReport
                    errors:
                    - - _type: ValidationMessage
                        summary: Archive is invalid
                    status: invalid
                Potentially invalid archive:
                  value:
                    _type: ValidationReport
                    warnings:
                    - - _type: ValidationMessage
                        summary: Archive may be invalid
                    status: warnings
          description: Overall validity of COMBINE archive and errors and warnings
            about how it isn't or may not be valid.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to determine if a COMBINE/OMEX archive is valid.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.combine.validate.handler
      summary: Validate a COMBINE archive and the simulation experiments and models
        inside it.
      description: |-
        Validate a COMBINE archive and the simulation experiments (SED-ML files) and models (e.g., SBML files) inside it.

        Notes:
        * An OMEX Manifest file is required to validate OMEX Metadata files. As a result, the `validateOmexManifest=false` option should often also be used with the `validateOmexMetadata=false` option.
        * Currently, submission to BioSimulations requires metadata to be in RDF-XML format.
        * COMBINE/OMEX archives must pass all validation checks for publication to BioSimulations.
  /combine/sedml-specs:
    post:
      requestBody:
        description: COMBINE/OMEX archive file or URL for a COMBINE/OMEX archive file.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileOrUrl'
            examples:
              File:
                value:
                  file: <FILE>
              URL:
                value:
                  url: https://models.org/archive.omex
        required: true
      tags:
      - Simulation projects
      - Simulation experiments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CombineArchiveSedDocSpecs'
              examples:
                Example specifications of a COMBINE archive:
                  value:
                    _type: CombineArchiveSedDocSpecs
                    contents:
                    - _type: CombineArchiveSedDocSpecsContent
                      location:
                        _type: CombineArchiveSedDocSpecsLocation
                        path: experiment1/simulation.sedml
                        value:
                          _type: SedDocument
                          level: 1
                          version: 3
                          models: []
                          simulations: []
                          tasks: []
                          dataGenerators: []
                          outputs: []
                      format: http://identifiers.org/combine.specifications/sed-ml
                      master: true
          description: Specifications of the SED-ML files in the COMBINE/OMEX archive.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to get the specifications of the SED outputs for COMBINE/OMEX
            archive because the URL is unavailable or the URL is not a valid COMBINE/OMEX
            archive.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.combine.get_sedml_specs_for_combine_archive.handler
      summary: Get the specifications of the SED-ML files in a COMBINE/OMEX archive
      description: Get the specifications of the SED-ML files in a COMBINE/OMEX archive
  /combine/metadata/rdf:
    post:
      requestBody:
        description: COMBINE/OMEX archive file or URL for a COMBINE/OMEX archive file.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetCombineArchiveMetadataFileOrUrl'
            examples:
              File:
                value:
                  file: <FILE>
              URL:
                value:
                  url: https://models.org/archive.omex
        required: true
      tags:
      - Simulation projects
      - Metadata
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RdfTriple'
          description: Metadata about the the COMBINE/OMEX archive.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to get the metadata about the COMBINE/OMEX archive because
            the URL is unavailable or the URL is not a valid COMBINE/OMEX archive.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.combine.get_metadata_for_combine_archive.handler_rdf_triples
      summary: Get the metadata about a COMBINE/OMEX archive
      description: Get the metadata about a COMBINE/OMEX archive from the OMEX Metadata
        files as a list of RDF triples.
  /sed-ml/validate:
    post:
      requestBody:
        description: SED-ML file.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileOrUrl'
            examples:
              FIle:
                value:
                  file: <FILE>
        required: true
      tags:
      - Simulation experiments
      - Validation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
              examples:
                Valid SED-ML file:
                  value:
                    _type: ValidationReport
                    status: valid
                Invalid SED-ML file:
                  value:
                    _type: ValidationReport
                    errors:
                    - - _type: ValidationMessage
                        summary: SED-ML file is invalid
                    status: invalid
          description: Overall validity of the SED-ML file and errors and warnings
            about how it isn't or may not be valid.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to determine if a SED-ML file is valid.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.sed_ml.validate.handler
      summary: Validate a SED-ML file
      description: "Validate a [Simulation Experiment Description Markup Language\
        \ (SED-ML)](https://sed-ml.org/) file. Note, this method does not validate\
        \ the sources of the models of SED-ML files or targets to models. Models files\
        \ are required for more comprehensive validation. The `/combine/validate`\
        \ endpoint provides more comprehensive validation that encompasses validation\
        \ of model sources and targets to models."
  /omex-metadata/validate:
    post:
      requestBody:
        description: OMEX Metadata file.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidateOmexMetadataFileOrUrl'
            examples:
              File:
                value:
                  file: <FILE>
        required: true
      tags:
      - Metadata
      - Validation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
              examples:
                Valid OMEX Metadata file:
                  value:
                    _type: ValidationReport
                    status: valid
                Invalid OMEX Metadata file:
                  value:
                    _type: ValidationReport
                    errors:
                    - - _type: ValidationMessage
                        summary: OMEX Metadata file is invalid
                    status: invalid
          description: Overall validity of the OMEX Metadata file and errors and warnings
            about how it isn't or may not be valid.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to determine if an OMEX metadata file is valid.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.omex_metadata.validate.handler
      summary: Validate metadata about a simulation project or a component of a simulation
        project
      description: |-
        Validate an [OMEX Metadata](https://sys-bio.github.io/libOmexMeta/) file with metadata about a simulation project or a component of a simulation project.

        Notes
        * Thumbnails described in OMEX Metadata files cannot be validated without the source images. As a result, such metadata files must be validated as part of the validation of COMBINE/OMEX archives (`/combine/validate`) which include the thumbnail files.
        * Currently, submission to BioSimulations requires metadata to be in RDF-XML format.
  /model/validate:
    post:
      requestBody:
        description: Model file.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidateModelFileOrUrl'
            examples:
              File:
                value:
                  file: <FILE>
        required: true
      tags:
      - Models
      - Validation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
              examples:
                Valid model:
                  value:
                    _type: ValidationReport
                    status: valid
                Invalid model:
                  value:
                    _type: ValidationReport
                    errors:
                    - - _type: ValidationMessage
                        summary: Model is invalid
                    status: invalid
          description: Overall validity of the model file and errors and warnings
            about how it isn't or may not be valid.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to determine if a model file is valid.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.model.validate.handler
      summary: Validate a model
      description: |-
        Validate a model file such as a [CellML](https://cellml.org) or [Systems Biology Markup Language (SBML)](http://sbml.org) file.

        Note, this endpoint is limited to models that are can be captured by a single file. Models that are described via multiple files can be validated using the COMBINE/OMEX archive validation endpoint (`/combine/validate`).
  /combine/file:
    get:
      tags:
      - Simulation projects
      parameters:
      - name: url
        description: URL for the COMBINE/OMEX archive.
        schema:
          $ref: '#/components/schemas/Url'
        in: query
        required: true
      - name: location
        description: Location in the COMBINE/OMEX archive.
        schema:
          $ref: '#/components/schemas/Url'
        in: query
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                File:
                  value: '"<FILE>"'
          description: Files in the COMBINE/OMEX archive.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to get the file in the COMBINE/OMEX archive because
            the URL is unavailable or the URL is not a valid COMBINE/OMEX archive.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.combine.get_file.handler
      summary: Get a file in a COMBINE/OMEX archive
      description: Get a file at a location in a COMBINE/OMEX archive.
    post:
      requestBody:
        description: COMBINE/OMEX archive and the file to add.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CombineArchiveAndAdditionalContent'
            examples:
              Add a text file to a COMBINE/OMEX archive:
                value:
                  archive:
                    url: https://website.com/archive.omex
                  newContent:
                    _type: CombineArchiveFileContent
                    location: experiment1/model.xml
                    filename: model.xml
                    format: http://identifiers.org/combine.specifications/sbml
                    master: true
                  files:
                  - <FILE>
                  overwriteLocations: true
                  download: true
            encoding:
              archive:
                contentType: application/json
              newContent:
                contentType: application/json
        required: true
      tags:
      - Simulation projects
      responses:
        "200":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                Modified COMBINE/OMEX archive:
                  value: '"<FILE>"'
            application/json:
              schema:
                $ref: '#/components/schemas/Url'
              examples:
                URL for the created COMBINE/OMEX archive:
                  value: '"https://data.biosimulations.org/XYZ"'
          description: Modified COMBINE/OMEX archive.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to get the file in the COMBINE/OMEX archive because
            the URL is unavailable or the URL is not a valid COMBINE/OMEX archive.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.combine.add_file.handler
      summary: Add content items to a COMBINE/OMEX archive
      description: Add content items to a COMBINE/OMEX archive.
  /combine/manifest:
    post:
      requestBody:
        description: COMBINE/OMEX archive file or URL for a COMBINE/OMEX archive file.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileOrUrl'
            examples:
              File:
                value:
                  file: <FILE>
              URL:
                value:
                  url: https://models.org/archive.omex
        required: true
      tags:
      - Simulation projects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CombineArchiveManifest'
              examples:
                Example specifications of a COMBINE archive:
                  value:
                    _type: CombineArchiveManifest
                    contents:
                    - _type: CombineArchiveManifestContent
                      location:
                        _type: CombineArchiveManifestLocation
                        path: experiment1/model.xml
                        value:
                          _type: CombineArchiveContentFile
                          filename: model.xml
                      format: http://identifiers.org/combine.specifications/sbml
                      master: false
          description: Specifications of the SED-ML files in the COMBINE/OMEX archive.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to get the specifications of the SED outputs for COMBINE/OMEX
            archive because the URL is unavailable or the URL is not a valid COMBINE/OMEX
            archive.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.combine.get_manifest.handler
      summary: Get the specifications of the SED-ML files in a COMBINE/OMEX archive
      description: Get the specifications of the SED-ML files in a COMBINE/OMEX archive
  /combine/metadata/biosimulations:
    post:
      requestBody:
        description: COMBINE/OMEX archive file or URL for a COMBINE/OMEX archive file.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetCombineArchiveMetadataFileOrUrl'
            examples:
              File:
                value:
                  file: <FILE>
              URL:
                value:
                  url: https://models.org/archive.omex
        required: true
      tags:
      - Simulation projects
      - Metadata
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BioSimulationsCombineArchiveElementMetadata'
          description: Metadata about the the COMBINE/OMEX archive.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to get the metadata about the COMBINE/OMEX archive because
            the URL is unavailable or the URL is not a valid COMBINE/OMEX archive.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.combine.get_metadata_for_combine_archive.handler_biosimulations
      summary: Get the metadata about a COMBINE/OMEX archive
      description: Get the metadata about a COMBINE/OMEX archive from the OMEX Metadata
        files in the archive encoded in BioSimulations' schema.
  /run/run:
    description: ""
    post:
      requestBody:
        description: Requested run
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SimulationRun'
            examples:
              Uploaded archive:
                value:
                  _type: SimulationRun
                  archiveFile: <FILE>
                  simulator: tellurium
                  environment:
                    _type: Environment
                    variables:
                    - _type: EnvironmentVariable
                      key: VERBOSE
                      value: "1"
              Archive at URL:
                value:
                  _type: SimulationRun
                  archiveUrl: https://site.com/archive.omex
                  simulator: tellurium
                  environment:
                    _type: Environment
                    variables:
                    - _type: EnvironmentVariable
                      key: VERBOSE
                      value: "1"
            encoding:
              environment:
                contentType: application/json
        required: true
      tags:
      - Simulation execution
      - Simulation projects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationRunResults'
              examples:
                Kinetic simulation with tellurium:
                  value:
                    _type: SimulationRun
                    archiveFile: <FILE>
                    simulator: tellurium
                    envVars:
                    - _type: EnvironmentVariable
                      key: VERBOSE
                      value: "1"
            application/x-hdf:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                HDF5 file with the result of each SED-ML report and, optionally, each SED-ML plot:
                  value: '"<FILE>"'
            application/zip:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                ? Zip archive with (a) an HDF5 file with the results of each SED-ML
                  report and, optionally, each SED-ML plot and (b) PDF files for each
                  SED-ML plot.
                : value: '"<FILE>"'
          description: The COMBINE/OMEX archive was executed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The COMBINE/OMEX archive could not be executed.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.run.run.handler
      summary: Execute a COMBINE/OMEX archive
      description: Execute the simulations defined in SED-ML format in a COMBINE/OMEX
        archive and return the result of each report and plot.
  /sed-ml/get-parameters-variables-for-simulation:
    post:
      requestBody:
        description: Model file and specifications of a simulation task of the model.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModelAndSimulation'
            examples:
              Example CVODE simulation of a SBML-encoded model located at a URL:
                value:
                  modelUrl: https://website.com/model.xml
                  modelLanguage: urn:sedml:language:sbml
                  simulationType: SedUniformTimeCourseSimulation
                  simulationAlgorithm: KISAO_0000019
                  modelingFramework: SBO_0000293
        required: true
      tags:
      - Simulation experiments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SedDocument'
              examples:
                Example SED document:
                  value:
                    _type: SedDocument
                    level: 1
                    version: 3
                    models: []
                    simulations: []
                    tasks: []
                    dataGenerators: []
                    outputs: []
          description: Possible observables of a SED task as a list of SED data generators.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to get the variables of a model because the model file
            is invalid.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Uploaded content is larger than the limit for this service.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error.
      operationId: src.handlers.sed_ml.get_parameters_variables_for_simulation.handler
      summary: Get the possible observables of a simulation as a list of SED variables.
components:
  schemas:
    SedDocument:
      description: A SED document.
      required:
      - outputs
      - level
      - version
      - models
      - simulations
      - tasks
      - dataGenerators
      - _type
      type: object
      properties:
        outputs:
          description: Outputs.
          type: array
          items:
            $ref: '#/components/schemas/SedOutput'
        level:
          description: Level.
          type: integer
        version:
          description: Version.
          type: integer
        models:
          description: Models.
          type: array
          items:
            $ref: '#/components/schemas/SedModel'
        simulations:
          description: Simulations.
          type: array
          items:
            $ref: '#/components/schemas/SedSimulation'
        tasks:
          description: Tasks.
          type: array
          items:
            $ref: '#/components/schemas/SedAbstractTask'
        dataGenerators:
          description: Data generators.
          type: array
          items:
            $ref: '#/components/schemas/SedDataGenerator'
        _type:
          description: Type.
          enum:
          - SedDocument
          type: string
      example:
        _type: SedDocument
        level: 1
        version: 3
        models: []
        simulations: []
        tasks: []
        dataGenerators: []
        outputs: []
    CombineArchive:
      description: A COMBINE/OMEX archive.
      required:
      - contents
      - _type
      type: object
      properties:
        contents:
          description: The content of the archive
          type: array
          items:
            $ref: '#/components/schemas/CombineArchiveContent'
        _type:
          description: Type.
          enum:
          - CombineArchive
          type: string
      example:
        _type: CombineArchive
        contents:
        - _type: CombineArchiveContent
          location:
            _type: CombineArchiveLocation
            path: experiment1/model.xml
            value:
              _type: CombineArchiveContentFile
              filename: model.xml
          format: http://identifiers.org/combine.specifications/sbml
          master: false
        - _type: CombineArchiveContent
          location:
            _type: CombineArchiveLocation
            path: experiment1/simulation.sedml
            value:
              _type: CombineArchiveContentUrl
              url: https://simulation.org/simulation.sedml
          format: http://identifiers.org/combine.specifications/sed-ml
          master: true
    CombineArchiveContent:
      description: Content item of a COMBINE/OMEX archive.
      required:
      - location
      - format
      - master
      - _type
      type: object
      properties:
        location:
          $ref: '#/components/schemas/CombineArchiveLocation'
          description: Location within its parent COMBINE/OMEX archive.
        format:
          description: URI for a format.
          type: string
        master:
          description: ""
          type: boolean
        _type:
          description: Type.
          enum:
          - CombineArchiveContent
          type: string
      example:
        _type: CombineArchiveContent
        location:
          _type: CombineArchiveLocation
          path: experiment1/model.xml
          value:
            _type: CombineArchiveContentFile
            filename: model.xml
        format: http://identifiers.org/combine.specifications/sbml
        master: true
    CombineArchiveLocation:
      description: Location of an item in a COMBINE/OMEX archive and its value.
      required:
      - path
      - value
      - _type
      type: object
      properties:
        path:
          description: Path within a COMBINE/OMEX archive.
          type: string
        value:
          $ref: '#/components/schemas/CombineArchiveLocationValue'
          description: Value of the content item of the COMBINE/OMEX archive.
        _type:
          description: Type.
          enum:
          - CombineArchiveLocation
          type: string
      example:
        _type: CombineArchiveLocation
        path: experiment1/model.xml
        value:
          _type: CombineArchiveContentFile
          filename: model.xml
    CombineArchiveManifest:
      description: A COMBINE/OMEX archive.
      required:
      - contents
      - _type
      type: object
      properties:
        contents:
          description: The content of the archive
          type: array
          items:
            $ref: '#/components/schemas/CombineArchiveManifestContent'
        _type:
          description: Type.
          enum:
          - CombineArchiveManifest
          type: string
      example:
        _type: CombineArchiveManifest
        contents:
        - _type: CombineArchiveManifestContent
          location:
            _type: CombineArchiveManifestLocation
            path: experiment1/model.xml
            value:
              _type: CombineArchiveContentFile
              filename: model.xml
          format: http://identifiers.org/combine.specifications/sbml
          master: false
        - _type: CombineArchiveManifestContent
          location:
            _type: CombineArchiveManifestLocation
            path: experiment1/simulation.sedml
            value:
              _type: CombineArchiveManifestContentUrl
              url: https://simulation.org/simulation.sedml
          format: http://identifiers.org/combine.specifications/sed-ml
          master: true
    CombineArchiveManifestContent:
      description: Content item of a COMBINE/OMEX archive.
      required:
      - location
      - format
      - master
      - _type
      type: object
      properties:
        location:
          $ref: '#/components/schemas/CombineArchiveManifestLocation'
          description: Location within its parent COMBINE/OMEX archive.
        format:
          description: URI for a format.
          type: string
        master:
          description: ""
          type: boolean
        _type:
          description: Type.
          enum:
          - CombineArchiveManifestContent
          type: string
      example:
        _type: CombineArchiveManifestContent
        location:
          _type: CombineArchiveManifestLocation
          path: experiment1/model.xml
          value:
            _type: CombineArchiveContentFile
            filename: model.xml
        format: http://identifiers.org/combine.specifications/sbml
        master: true
    CombineArchiveManifestLocation:
      description: Location of an item in a COMBINE/OMEX archive and its value.
      required:
      - path
      - value
      - _type
      type: object
      properties:
        path:
          description: Path within a COMBINE/OMEX archive.
          type: string
        value:
          $ref: '#/components/schemas/CombineArchiveContentFile'
          description: Value of the content item of the COMBINE/OMEX archive.
        _type:
          description: Type.
          enum:
          - CombineArchiveManifestLocation
          type: string
      example:
        _type: CombineArchiveManifestLocation
        path: experiment1/model.xml
        value:
          _type: CombineArchiveContentFile
          filename: model.xml
    CombineArchiveSedDocSpecs:
      description: The specifications of the SED-ML files in a COMBINE/OMEX archive.
      required:
      - contents
      - _type
      type: object
      properties:
        contents:
          description: The content of the archive
          type: array
          items:
            $ref: '#/components/schemas/CombineArchiveSedDocSpecsContent'
        _type:
          description: Type.
          enum:
          - CombineArchiveSedDocSpecs
          type: string
      example:
        _type: CombineArchiveSedDocSpecs
        contents:
        - _type: CombineArchiveSedDocSpecsContent
          location:
            _type: CombineArchiveSedDocSpecsLocation
            path: experiment1/simulation.sedml
            value:
              _type: SedDocument
              level: 1
              version: 3
              models: []
              simulations: []
              tasks: []
              dataGenerators: []
              outputs: []
          format: http://identifiers.org/combine.specifications/sed-ml
          master: true
    CombineArchiveSedDocSpecsContent:
      description: Content item of a COMBINE/OMEX archive.
      required:
      - location
      - format
      - master
      - _type
      type: object
      properties:
        location:
          $ref: '#/components/schemas/CombineArchiveSedDocSpecsLocation'
          description: Location within its parent COMBINE/OMEX archive.
        format:
          description: URI for a format.
          type: string
        master:
          description: ""
          type: boolean
        _type:
          description: Type.
          enum:
          - CombineArchiveSedDocSpecsContent
          type: string
      example:
        _type: CombineArchiveSedDocSpecsContent
        location:
          _type: CombineArchiveSedDocSpecsLocation
          path: experiment1/simulation.sedml
          value:
            _type: SedDocument
            level: 1
            version: 3
            models: []
            simulations: []
            tasks: []
            dataGenerators: []
            outputs: []
        format: http://identifiers.org/combine.specifications/sed-ml
        master: true
    CombineArchiveSedDocSpecsLocation:
      description: Location of an item in a COMBINE/OMEX archive and its value.
      required:
      - path
      - value
      - _type
      type: object
      properties:
        path:
          description: Path within a COMBINE/OMEX archive.
          type: string
        value:
          $ref: '#/components/schemas/SedDocument'
          description: Specifications of the SED document.
        _type:
          description: Type.
          enum:
          - CombineArchiveSedDocSpecsLocation
          type: string
      example:
        _type: CombineArchiveSedDocSpecsLocation
        path: experiment1/model.xml
        value:
          _type: SedDocument
          level: 1
          version: 3
          models: []
          simulations: []
          tasks: []
          dataGenerators: []
          outputs: []
    SedModel:
      description: A SED model.
      required:
      - id
      - language
      - source
      - _type
      - changes
      type: object
      properties:
        id:
          description: Unique identifier within its parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        language:
          $ref: '#/components/schemas/SedModelLanguage'
          description: "Format (e.g., BNGL, SBML)."
        source:
          description: Location of the file for the model.
          type: string
        _type:
          description: Type.
          enum:
          - SedModel
          type: string
        changes:
          description: Changes to the model.
          type: array
          items:
            $ref: '#/components/schemas/SedModelChange'
      example:
        _type: SedModel
        id: model
        name: Model
        language: urn:sedml:language:sbml
        source: model.xml
        changes:
        - _type: SedModelAttributeChange
          id: parameter_k1
          name: parameter k1
          target:
            _type: SedTarget
            value: "/sbml:sbml/sbml:model/sbml:listOfParameters/sbml:parameter[@id='k1']/@value"
            namespaces:
            - _type: Namespace
              prefix: sbml
              uri: http://www.sbml.org/sbml/level3/version1/core
          newValue: "1.1"
    SedUniformTimeCourseSimulation:
      description: A SED uniform time course simulation.
      required:
      - id
      - _type
      - initialTime
      - outputStartTime
      - outputEndTime
      - numberOfSteps
      - algorithm
      type: object
      properties:
        id:
          description: Unique identifier within its parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        _type:
          description: Type of the simulation.
          enum:
          - SedUniformTimeCourseSimulation
          type: string
        initialTime:
          description: Initial time.
          type: number
        outputStartTime:
          description: Output start time.
          type: number
        outputEndTime:
          description: Output end time.
          type: number
        numberOfSteps:
          description: Number of steps.
          minimum: 1
          type: integer
        algorithm:
          $ref: '#/components/schemas/SedAlgorithm'
          description: Algorithm.
      example:
        _type: SedUniformTimeCourseSimulation
        id: ko_simulation
        name: knockout simulation
        initialTime: 0
        outputStartTime: 10
        outputEndTime: 20
        numberOfSteps: 100
        algorithm:
          _type: SedAlgorithm
          kisaoId: KISAO_0000019
          changes: []
    SedSteadyStateSimulation:
      description: A SED steady state simulation.
      required:
      - id
      - _type
      - algorithm
      type: object
      properties:
        id:
          description: Unique identifier within its parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        _type:
          description: Type of the simulation.
          enum:
          - SedSteadyStateSimulation
          type: string
        algorithm:
          $ref: '#/components/schemas/SedAlgorithm'
          description: Algorithm.
      example:
        _type: SedSteadyStateSimulation
        id: koSimulation
        name: knockout simulation
        algorithm:
          _type: SedAlgorithm
          kisaoId: KISAO_0000437
          changes: []
    SedOneStepSimulation:
      description: A SED one step simulation.
      required:
      - id
      - _type
      - algorithm
      - step
      type: object
      properties:
        id:
          description: Unique identifier within its parent SED document.
          type: string
        _type:
          description: Type of the simulation.
          enum:
          - SedOneStepSimulation
          type: string
        name:
          description: Brief description.
          type: string
        step:
          description: Step size.
          type: number
        algorithm:
          $ref: '#/components/schemas/SedAlgorithm'
          description: Algorithm.
      example:
        _type: SedOneStepSimulation
        id: singleStep
        name: single step
        step: 1
        algorithm:
          _type: SedAlgorithm
          kisaoId: KISAO_0000019
          changes: []
    SedAxisScale:
      description: ""
      enum:
      - log
      - linear
      type: string
      example: linear
    SedSimulation:
      oneOf:
      - $ref: '#/components/schemas/SedSteadyStateSimulation'
      - $ref: '#/components/schemas/SedUniformTimeCourseSimulation'
      - $ref: '#/components/schemas/SedOneStepSimulation'
      discriminator:
        propertyName: _type
      description: A SED simulation.
      type: object
      example:
        id: koSimulation
        name: knockout simulation
        _type: SedSteadyStateSimulation
        algorithm:
          _type: SedAlgorithm
          kisaoId: KISAO_0000437
          changes: []
    Error:
      description: Error.
      required:
      - status
      - title
      - detail
      - type
      type: object
      properties:
        status:
          description: Status code.
          type: integer
        title:
          description: Brief summary.
          type: string
        type:
          description: Type
          type: string
        detail:
          description: Description.
          type: string
        validationReport:
          $ref: '#/components/schemas/ValidationReport'
          description: Validation report
      example:
        status: 400
        title: Unsupported model langauge
        detail: Models of language XYZ are not supported
        type: NotImplementedError
    SedAlgorithm:
      description: A SED algorithm.
      required:
      - _type
      - kisaoId
      - changes
      type: object
      properties:
        _type:
          description: Type.
          enum:
          - SedAlgorithm
          type: string
        kisaoId:
          $ref: '#/components/schemas/KisaoId'
          description: KiSAO id
        changes:
          description: Changes to the default values of the parameters.
          type: array
          items:
            $ref: '#/components/schemas/SedAlgorithmParameterChange'
      example:
        _type: SedAlgorithm
        kisaoId: KISAO_0000029
        changes:
        - _type: SedAlgorithmParameterChange
          kisaoId: KISAO_0000488
          newValue: "1000"
    KisaoId:
      description: KiSAO id
      type: string
      example: KISAO_0000019
    SedAlgorithmParameterChange:
      description: A SED algorithm parameter
      required:
      - kisaoId
      - newValue
      - _type
      type: object
      properties:
        kisaoId:
          $ref: '#/components/schemas/KisaoId'
          description: KiSAO id
        _type:
          description: Type.
          enum:
          - SedAlgorithmParameterChange
          type: string
        newValue:
          description: New value
          type: string
      example:
        _type: SedAlgorithmParameterChange
        kisaoId: KISAO_0000488
        newValue: "1000"
    SedModelLanguage:
      description: |-
        A SED URN for a model language.

        The full list of recognized values is available at https://sed-ml.org/urns.html.
      type: string
      example: urn:sedml:language:sbml
    CombineArchiveSpecsAndFiles:
      description: Specifications of a COMBINE/OMEX archive (including its SED-ML
        files) and the other (non-SED-ML) files that it should contain.
      required:
      - specs
      type: object
      properties:
        specs:
          $ref: '#/components/schemas/CombineArchive'
          description: Specifications of the COMBINE archive.
        files:
          description: "File (e.g., model) to place into the COMBINE/OMEX archive."
          type: array
          items:
            $ref: '#/components/schemas/File'
        download:
          description: Whether to download the archive or return a URL where the archive
            can be downloaded.
          type: boolean
      example:
        specs:
          _type: CombineArchive
          contents:
          - _type: CombineArchiveContent
            location:
              _type: CombineArchiveLocation
              path: experiment1/model.xml
              value:
                _type: CombineArchiveContentFile
                filename: model.xml
            format: http://identifiers.org/combine.specifications/sbml
            master: false
          - _type: CombineArchiveContent
            location:
              _type: CombineArchiveLocation
              path: experiment1/simulation.sedml
              value:
                _type: CombineArchiveContentUrl
                url: https://simulation.org/simulation.sedml
            format: http://identifiers.org/combine.specifications/sed-ml
            master: true
        files:
        - <FILE>
      x-body-name: body
    Namespace:
      description: Namespace
      required:
      - uri
      - _type
      type: object
      properties:
        prefix:
          description: Prefix.
          type: string
        uri:
          description: URI.
          type: string
        _type:
          description: Type.
          enum:
          - Namespace
          type: string
      example:
        prefix: sbml
        uri: http://www.sbml.org/sbml/level3/version1/core
        _type: Namespace
    SboId:
      description: Identifier for an SBO term
      type: string
      example: SBO_0000293
    File:
      format: binary
      description: The two files uploaded in creating a combine archive
      type: string
      example: '"<FILE>"'
    Url:
      description: URL
      type: string
      example: https://biosimulations.org
    ModelAndSimulation:
      description: "A model file or URL and a type of simulation of that model.\n\n\
        Only one of \"modelFile\" or \"modelUrl\" should be used at a time. \"modelFile\"\
        \ and \n\"modelUrl\" cannot be used together."
      required:
      - modelLanguage
      - simulationType
      - simulationAlgorithm
      - modelingFramework
      type: object
      properties:
        modelFile:
          $ref: '#/components/schemas/File'
          description: Model file.
        modelLanguage:
          $ref: '#/components/schemas/SedModelLanguage'
          description: Model language.
        simulationType:
          description: Type of simulation.
          enum:
          - SedUniformTimeCourseSimulation
          - SedSteadyStateSimulation
          - SedOneStepSimulation
          type: string
        modelingFramework:
          $ref: '#/components/schemas/SboId'
          description: Modeling framework
        simulationAlgorithm:
          $ref: '#/components/schemas/KisaoId'
          description: KiSAO id for the simulation algorithm.
        modelUrl:
          $ref: '#/components/schemas/Url'
          description: ""
      example:
        modelUrl: https://website.com/model.xml
        modelLanguage: urn:sedml:language:sbml
        simulationType: SedUniformTimeCourseSimulation
        simulationAlgorithm: KISAO_0000019
        modelingFramework: SBO_0000293
      x-body-name: body
    CombineArchiveContentUrl:
      description: File to be resolved from a URL
      required:
      - _type
      - url
      type: object
      properties:
        _type:
          description: Type.
          enum:
          - CombineArchiveContentUrl
          type: string
        url:
          description: URL where file should resolved from
          type: string
      example:
        _type: CombineArchiveContentFile
        url: https://website.com/model.xml
    CombineArchiveContentFile:
      description: File
      required:
      - _type
      - filename
      type: object
      properties:
        _type:
          description: Type.
          enum:
          - CombineArchiveContentFile
          type: string
        filename:
          description: Location where the file should be placed inside the COMBINE/OMEX
            archive
          type: string
      example:
        _type: CombineArchiveContentFile
        filename: model.xml
    CombineArchiveLocationValue:
      oneOf:
      - $ref: '#/components/schemas/SedDocument'
      - $ref: '#/components/schemas/CombineArchiveContentFile'
      - $ref: '#/components/schemas/CombineArchiveContentUrl'
      discriminator:
        propertyName: _type
      description: The value of a location of a COMBINE/OMEX archive.
      type: object
      example:
        _type: CombineArchiveContentFile
        filename: model.xml
    SedModelAttributeChange:
      description: A SED model attribute change.
      required:
      - _type
      - newValue
      - target
      - id
      type: object
      properties:
        _type:
          description: Type.
          enum:
          - SedModelAttributeChange
          type: string
        newValue:
          description: New value.
          type: string
        target:
          $ref: '#/components/schemas/SedTarget'
          description: Target
        id:
          description: Unique identifier within its parents SED document.
          type: string
        name:
          description: Brief description
          type: string
      example:
        _type: SedModelAttributeChange
        id: parameter_k1
        name: parameter k1
        target:
          _type: SedTarget
          value: "/sbml:sbml/sbml:model/sbml:listOfParameters/sbml:parameter[@id='k1']/@value"
          namespaces:
          - _type: Namespace
            prefix: sbml
            uri: http://www.sbml.org/sbml/level3/version1/core
        newValue: "1.1"
    SedModelChange:
      oneOf:
      - $ref: '#/components/schemas/SedModelAttributeChange'
      - $ref: '#/components/schemas/SedAddElementModelChange'
      - $ref: '#/components/schemas/SedRemoveElementModelChange'
      - $ref: '#/components/schemas/SedReplaceElementModelChange'
      - $ref: '#/components/schemas/SedComputeModelChange'
      discriminator:
        propertyName: _type
      description: A SED model change.
      type: object
      example:
        _type: SedModelAttributeChange
        id: parameter_k1
        name: parameter k1
        target:
          _type: SedTarget
          value: "/sbml:sbml/sbml:model/sbml:listOfParameters/sbml:parameter[@id='k1']/@value"
          namespaces:
          - _type: Namespace
            prefix: sbml
            uri: http://www.sbml.org/sbml/level3/version1/core
        newValue: "1.1"
    SedTarget:
      description: Target of a variable.
      required:
      - _type
      - value
      type: object
      properties:
        _type:
          description: Type.
          enum:
          - SedTarget
          type: string
        value:
          description: Value.
          type: string
        namespaces:
          description: Namespaces
          type: array
          items:
            $ref: '#/components/schemas/Namespace'
      example:
        _type: SedTarget
        value: "/sbml:sbml/sbml:model/qual:listOfQualitativeSpecies/qual:qualitativeSpecies[@qual:id='erk']"
        namespaces:
        - prefix: sbml
          uri: http://www.sbml.org/sbml/level3/version1/core
          _type: Namespace
        - prefix: qual
          uri: http://www.sbml.org/sbml/level3/version1/qual/version1
          _type: Namespace
    FileOrUrl:
      description: File or a URL for a file.
      type: object
      properties:
        file:
          $ref: '#/components/schemas/File'
          description: File.
        url:
          $ref: '#/components/schemas/Url'
          description: URL
      example:
        file: <FILE>
    ValidationMessage:
      description: "Error or warning message about validity (e.g., of a COMBINE/OMEX\
        \ archive)."
      required:
      - summary
      - _type
      type: object
      properties:
        details:
          description: Child messages with more detailed information.
          type: array
          items:
            $ref: '#/components/schemas/ValidationMessage'
        _type:
          description: Type.
          enum:
          - ValidationMessage
          type: string
        summary:
          description: Information about validity or lack thereof.
          type: string
      example:
        _type: ValidationMessage
        summary: COMBINE archive is invalid.
        details:
        - _type: ValidationMessage
          summary: SED-ML document is invalid
          details:
          - _type: ValidationMessage
            summary: Model is invalid
    ValidationReport:
      description: "Information about whether a COMBINE archive is valid, potentially\
        \ invalid (1 or more warnings), or invalid (1 or more errors)."
      required:
      - status
      - _type
      type: object
      properties:
        errors:
          description: Errors with the archive.
          type: array
          items:
            $ref: '#/components/schemas/ValidationMessage'
        status:
          description: Overall status of the archive.
          enum:
          - valid
          - invalid
          - warnings
          type: string
        warnings:
          description: Warnings for the archive.
          type: array
          items:
            $ref: '#/components/schemas/ValidationMessage'
        _type:
          description: Type
          enum:
          - ValidationReport
          type: string
      example:
        _type: ValidationReport
        errors:
        - - _type: ValidationMessage
            summary: Archive is invalid
        status: invalid
        warnings:
        - - _type: ValidationMessage
            summary: Archive may be invalid
    KisaoAlgorithmSubstitutionPolicy:
      description: "Algorithm substitution policy, the degree to switch algorithms\
        \ can be substituted for each other."
      required:
      - id
      - level
      - name
      - _type
      type: object
      properties:
        id:
          description: Id of the policy
          enum:
          - NONE
          - SAME_METHOD
          - SAME_MATH
          - SIMILAR_APPROXIMATIONS
          - DISTINCT_APPROXIMATIONS
          - DISTINCT_SCALES
          - SAME_VARIABLES
          - SIMILAR_VARIABLES
          - SAME_FRAMEWORK
          - ANY
          type: string
        level:
          description: "Level of the policy (0: most restrictive to 9: least restrictive)"
          type: integer
        name:
          description: Name of the policy
          enum:
          - None
          - Same method
          - Same math
          - Similar approximations
          - Distinct approximations
          - Distinct scales
          - Same variables
          - Similar variables
          - Same framework
          - Any
          type: string
        _type:
          description: Type
          enum:
          - KisaoAlgorithmSubstitutionPolicy
          type: string
      example:
        _type: KisaoAlgorithmSubstitutionPolicy
        id: SAME_MATH
        name: Same math
        level: 1
    KisaoAlgorithmSubstitution:
      description: The most restrictive substition policy at which at algorithm can
        be substituted for another.
      required:
      - algorithms
      - maxPolicy
      - _type
      type: object
      properties:
        maxPolicy:
          $ref: '#/components/schemas/KisaoAlgorithmSubstitutionPolicy'
          description: Most restrictive substitution policy at which the algorithm
            can be substituted
        _type:
          description: Type
          enum:
          - KisaoAlgorithmSubstitution
          type: string
        algorithms:
          description: Pair of algorithms that can be substituted (up to a degree
            of similarity).
          type: array
          items:
            $ref: '#/components/schemas/KisaoTerm'
      example:
        _type: KisaoAlgorithmSubstitution
        algorithms:
        - _type: KisaoTerm
          id: KISAO_0000019
          name: CVODE
        - _type: KisaoTerm
          id: KISAO_0000088
          name: LSODA
        maxPolicy:
          _type: KisaoAlgorithmSubstitutionPolicy
          id: DISTINCT_APPROXIMATIONS
          name: Distinct approximations
          level: 4
    KisaoTerm:
      description: Term in the KiSAO ontology.
      required:
      - _type
      - id
      - name
      type: object
      properties:
        _type:
          description: Type
          enum:
          - KisaoTerm
          type: string
        id:
          description: Id of the term
          type: string
        name:
          description: Name of the term.
          type: string
      example:
        _type: KisaoTerm
        id: KISAO_0000019
        name: CVODE
    RdfTriple:
      description: "An RDF triple (subject, predicate, object)."
      required:
      - _type
      - subject
      - predictate
      - object
      type: object
      properties:
        _type:
          description: Type
          enum:
          - RdfTriple
          type: string
        subject:
          $ref: '#/components/schemas/RdfNode'
          description: Subject
        predictate:
          $ref: '#/components/schemas/RdfNode'
          description: Predicate
        object:
          $ref: '#/components/schemas/RdfNode'
          description: Object
      example:
        _type: RdfTriple
        subject:
          _type: uri
          value: http://omex-library.org/MyCombineArchive.omex
        predictate:
          _type: uri
          value: https://dublincore.org/specifications/dublin-core/dcmi-terms/title
        object:
          _type: literal
          value: Title of my COMBINE archive
    URI:
      description: Uniform Resource Identifier (URI)
      type: string
      example: http://identifiers.org/doi:10.1083/jcb.200306139
    BioSimulationsCustomMetadata:
      description: ""
      required:
      - _type
      - attribute
      - value
      type: object
      properties:
        _type:
          description: Type
          enum:
          - BioSimulationsCustomMetadata
          type: string
        attribute:
          $ref: '#/components/schemas/BioSimulationsMetadataValue'
          description: Atttribute of the COMBINE/OMEX archive.
        value:
          $ref: '#/components/schemas/BioSimulationsMetadataValue'
          description: Value of the attribute of the COMBINE/OMEX archive.
      example:
        _type: BioSimulationsCustomMetadata
        attribute:
          _type: BioSimulationsMetadataValue
          uri: http://www.collex.org/schema#thumbnail
          label: Graphical abstract
        value:
          _type: BioSimulationsMetadataValue
          uri: https://website.com/image.png
          label: Caption of the graphical abstract
    BioSimulationsMetadataValue:
      description: A URI and a human-readable label for the URI
      required:
      - _type
      - uri
      type: object
      properties:
        _type:
          description: Type
          enum:
          - BioSimulationsMetadataValue
          type: string
        uri:
          $ref: '#/components/schemas/URI'
          description: Unique identifier.
        label:
          description: Human-readable label.
          type: string
      example:
        _type: BioSimulationsMetadataValue
        uri: https://doi.org/10.1371/journal.pcbi.1008379.g001
        label: Inferring latent temporal progression and regulatory networks from
          cross-sectional transcriptomic data of cancer samples
    RdfLiteralNode:
      description: Literal RDF node.
      required:
      - _type
      - value
      type: object
      properties:
        _type:
          description: Type
          enum:
          - RdfLiteralNode
          type: string
        value:
          description: Value
          type: string
      example:
        _type: RdfLiteralNode
        value: First name Last name
    RdfUriNode:
      description: URI RDF node.
      required:
      - _type
      - value
      type: object
      properties:
        _type:
          description: Type
          enum:
          - RdfUriNode
          type: string
        value:
          $ref: '#/components/schemas/URI'
          description: 'Value   '
      example:
        _type: RdfUriNode
        value: http://identifiers.org/pubmed:1234
    RdfBlankNode:
      description: Blank RDF node
      required:
      - _type
      - value
      type: object
      properties:
        _type:
          description: Type
          enum:
          - RdfBlankNode
          type: string
        value:
          description: Value
          type: string
      example:
        _type: RdfBlankNode
        value: abcxyz
    RdfNode:
      anyOf:
      - $ref: '#/components/schemas/RdfBlankNode'
      - $ref: '#/components/schemas/RdfLiteralNode'
      - $ref: '#/components/schemas/RdfUriNode'
      discriminator:
        propertyName: _type
      description: A node of an RDF triple.
      type: object
      example:
        _type: RdfLiteralNode
        value: First name Last name
    BioSimulationsCombineArchiveElementMetadata:
      description: Metadata about a COMBINE/OMEX archive or an entity in the archive
        such as a SED-ML document or a report of a SED-ML document.
      required:
      - _type
      - uri
      - title
      - abstract
      - license
      - created
      type: object
      properties:
        _type:
          description: Type
          enum:
          - BioSimulationsCombineArchiveElementMetadata
          type: string
        title:
          description: Title
          type: string
        abstract:
          description: Short summary
          type: string
        keywords:
          description: Keywords
          type: array
          items:
            type: string
        description:
          description: Long summary
          type: string
        thumbnails:
          description: Locations of summary images within the COMBINE/OMEX archive.
          type: array
          items:
            $ref: '#/components/schemas/URI'
        taxa:
          description: Taxa represented by the COMBINE/OMEX archive.
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsMetadataValue'
        encodes:
          description: "Biology represented by the COMBINE/OMEX archive such as molecules,\
            \ cell types, and organs."
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsMetadataValue'
        sources:
          description: Locations of the source code or materials for the COMBINE/OMEX
            archive such as a GitHub repository.
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsMetadataValue'
        predecessors:
          description: Predecessors from which the content of the COMBINE/OMEX archive
            was derived from such as a prior version of a model.
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsMetadataValue'
        successors:
          description: Successors of the content of the COMBINE/OMEX archive such
            as an improved version of a model.
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsMetadataValue'
        identifiers:
          description: Other identifiers for the COMBINE/OME archive or its contents
            such as an identifier for an entry in BioModels.
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsMetadataValue'
        citations:
          description: Citations such as journal articlces and books for the COMBINE/OMEX
            archive.
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsMetadataValue'
        creators:
          description: Authors of the COMBINE/OMEX archive and its contents.
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsMetadataValue'
        contributors:
          description: Other people who contributed to the COMBINE/OMEX archive such
            as curators.
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsMetadataValue'
        license:
          $ref: '#/components/schemas/BioSimulationsMetadataValue'
          description: License for the COMBINE/OMEX archive such as SPDX:MIT.
        funders:
          description: Agencies which funded the work which produced the COMBINE/OMEX
            archive.
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsMetadataValue'
        seeAlso:
          description: Other resources relevant to a COMBINE/OMEX archive such as
            a software tool that was used to build a model in the archive.
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsMetadataValue'
        created:
          format: date
          description: Date when the COMBINE/OMEX archive or its key content was created.
          type: string
        modified:
          description: Dates when the COMBINE/OMEX archive or its key content was
            modified.
          type: array
          items:
            format: date
            type: string
        other:
          description: Additional custom metadata about the COMBINE/OMEX archive.
          type: array
          items:
            $ref: '#/components/schemas/BioSimulationsCustomMetadata'
        uri:
          $ref: '#/components/schemas/URI'
          description: "URI of the subject of the metadata with in the COMBINE/OMEX\
            \ archive such as \n\n\".\": COMBINE/OMEX archive\n\"./path/to/sim.sedml\"\
            : SED-ML document\n\"./path/to/sim.sedml/Table1\": Report in a SED-ML\
            \ document"
        combineArchiveUri:
          description: URI of the parent COMBINE/OMEX archive of the content element
            for the metadata.
          type: string
      example:
        _type: BioSimulationsMetadata
        title: Title
        abstract: Short summary
        keywords:
        - topic 1
        - topic 2
        description: Long summary
        thumbnails:
        - ./Figure1.png
        taxa:
        - _type: BioSimulationsMetadataValue
          uri: http://identifiers.org/taxonomy:9606
          label: Homo sapiens
        encodes:
        - _type: BioSimulationsMetadataValue
          uri: http://identifiers.org/uniprot:P0DP23
          label: Calmodulin-1
        sources:
        - _type: BioSimulationsMetadataValue
          uri: https://github.com/org/repo
          label: Source code
        predecessors:
        - _type: BioSimulationsMetadataValue
          uri: http://identifiers.org/biomodels.db:BIOMD0000000048
          label: BioModels:BIOMD0000000048
        successors:
        - _type: BioSimulationsMetadataValue
          uri: http://identifiers.org/biomodels.db:BIOMD0000000050
          label: BioModels:BIOMD0000000050
        identifiers:
        - _type: BioSimulationsMetadataValue
          uri: http://identifiers.org/biomodels.db:BIOMD0000000049
          label: BioModels:BIOMD0000000049
        citations:
        - _type: BioSimulationsMetadataValue
          uri: https://identfiers.org/pubmed:1234
          label: "Author. Title. Journal volume, number: pages (year)."
        creators:
        - _type: BioSimulationsMetadataValue
          uri: http://identifiers.org/orcid:0000-1111-2222-3333
          label: First Last
        contributors:
        - _type: BioSimulationsMetadataValue
          uri: http://identifiers.org/orcid:0000-1111-2222-3333
          label: First Last
        license:
          _type: BioSimulationsMetadataValue
          uri: http://identifiers.org/spdx:MIT
          label: MIT
        funders:
        - _type: BioSimulationsMetadataValue
          uri: http://identifiers.org/FunderRegistry:100000001
          label: National Science Foundation
        seeAlso:
        - _type: BioSimulationsMetadataValue
          uri: https://en.wikipedia.org/wiki/Semantic_triple
          label: More information
        created: 2018-01-17T00:00:00.000Z
        modified:
        - 2018-01-17T00:00:00.000Z
        other:
        - _type: BioSimulationsCustomMetadata
          attribute:
            _type: BioSimulationsMetadataValue
            uri: http://ontology.eil.utoronto.ca/icity/OM/temporalUnit
            label: Temporal unit
          value:
            _type: BioSimulationsMetadataValue
            uri: http://www.w3.org/2006/time#second
            label: second
        uri: "."
    CombineArchiveAndAdditionalContent:
      description: A COMBINE/OMEX archive and an additional content items that should
        be added to the archive.
      required:
      - archive
      - newContent
      - files
      type: object
      properties:
        archive:
          $ref: '#/components/schemas/FilenameOrUrl'
          description: URL or filename for the COMBINE/OMEX archive.
        overwriteLocations:
          description: |-
            Whether to overwrite the location if it already exists, or to add the content at an alternative location (indicated location plus a unique integer).

            Default: true
          type: boolean
        download:
          description: |-
            Whether to download the modified COMBINE/OMEX archive or return a URL where it can be retrieved.

            Default: false
          type: boolean
        files:
          description: "Files to add to the COMBINE/OMEX archive and, optionally,\
            \ the archive."
          type: array
          items:
            $ref: '#/components/schemas/File'
        newContent:
          $ref: '#/components/schemas/CombineArchiveFileContent'
          description: Content to add to the COMBINE/OMEX archive.
      example:
        archive:
          url: https://website.com/archive.omex
        newContent:
          _type: CombineArchiveFileContent
          location: experiment1/model.xml
          filename: model.xml
          format: http://identifiers.org/combine.specifications/sbml
          master: true
        files:
        - <FILE>
        overwriteLocations: true
        download: true
    FilenameOrUrl:
      description: Filename or URL
      type: object
      properties:
        filename:
          description: Filename.
          type: string
        url:
          $ref: '#/components/schemas/Url'
          description: URL
      example:
        filename: ./path/to/file.ext
    CombineArchiveFileContent:
      description: A file for a COMBINE/OMEX archive
      required:
      - location
      - format
      - master
      - _type
      - filename
      type: object
      properties:
        location:
          description: Location within its parent COMBINE/OMEX archive.
          type: string
        format:
          description: URI for a format.
          type: string
        master:
          description: ""
          type: boolean
        _type:
          description: Type.
          enum:
          - CombineArchiveContent
          type: string
        filename:
          description: Uploaded filename
          type: string
      example:
        _type: CombineArchiveFileContent
        location: experiment1/model.xml
        filename: model.xml
        format: http://identifiers.org/combine.specifications/sbml
        master: true
    SimulationRun:
      description: Request for the execution of a COMBINE/OMEX archive
      required:
      - simulator
      - _type
      type: object
      properties:
        simulator:
          $ref: '#/components/schemas/BioSimulatorsId'
          description: Id of a validated simulation tool registered with BioSimulators
            (see https://biosimulators.org/).
        archiveUrl:
          $ref: '#/components/schemas/Url'
          description: URL for a COMBINE archive
        archiveFile:
          $ref: '#/components/schemas/File'
          description: COMBINE/OMEX archive file
        _type:
          description: Type
          enum:
          - SimulationRun
          type: string
        environment:
          $ref: '#/components/schemas/Environment'
          description: Values of simulator-specific environment variables to use run
            the simulation. See the BioSimulators documentation (https://biosimulators.org/help)
            and the technical documentation for each simulation tool (https://docs.biosimulators.org/)
            for information about the available environment variables.
      example:
        _type: SimulationRun
        archiveFile: <FILE>
        simulator: tellurium
        environment:
          _type: Environment
          variables:
          - _type: EnvironmentVariable
            key: VERBOSE
            value: "1"
    EnvironmentVariable:
      title: Root Type for EnvironmentVariable
      description: A value of an environment variable
      required:
      - _type
      - key
      - value
      type: object
      properties:
        _type:
          description: Type
          enum:
          - EnvironmentVariable
          type: string
        key:
          description: Name of the environment variable
          type: string
        value:
          description: Value of the environment variable
          type: string
      example:
        _type: EnvironmentVariable
        key: VERBOSE
        value: "1"
    Simulator:
      title: Root Type for Simulator
      description: Simulation tool
      required:
      - id
      - _type
      - version
      - specs
      - api
      - name
      type: object
      properties:
        _type:
          description: Type
          enum:
          - Simulator
          type: string
        id:
          $ref: '#/components/schemas/BioSimulatorsId'
          description: BioSimulators id of the simulation tool.
        version:
          description: Version of the simulation tool
          type: string
        specs:
          $ref: '#/components/schemas/Url'
          description: URL where the specifications of the simulation tool can be
            retrieved.
        api:
          $ref: '#/components/schemas/SimulatorApi'
          description: BioSimulators API for the simulation tool.
        name:
          description: Name
          type: string
      example:
        _type: Simulator
        id: tellurium
        name: tellurium
        version: 2.2.1
        api:
          _type: SimulatorApi
          package: biosimulators_tellurium
          module: biosimulators_tellurium
          version: 0.1.0
        specs: https://api.biosimulators.org/simulators/tellurium/2.2.1
    BioSimulatorsId:
      description: Id of a simulation tool registered with BioSimulators.
      type: string
      example: tellurium
    SimulationRunResults:
      description: Results of the execution of a COMBINE/OMEX archive
      required:
      - outputs
      - log
      - _type
      type: object
      properties:
        outputs:
          description: Results of each SED-ML output
          type: array
          items:
            $ref: '#/components/schemas/SimulationRunOutput'
        log:
          $ref: '#/components/schemas/CombineArchiveLog'
          description: Log of the execution of the run.
        _type:
          description: Type
          enum:
          - SimulationRunResults
          type: string
    SimulatorApi:
      title: Root Type for SimulatorApi
      description: BioSimulators API for a simulation tool.
      required:
      - _type
      - module
      - version
      - package
      type: object
      properties:
        _type:
          enum:
          - SimulatorApi
          type: string
        package:
          description: "Python package which implements the BioSimulators API for\
            \ the simulation tool (e.g., PyPI: biosimulators_tellurium, git+https://github.com/biosimulators/biosimulators_tellurium.git)."
          type: string
        module:
          description: Python module which implements the BioSimulators API for the
            simulation tool.
          type: string
        version:
          description: Version of the API of the simulation tool.
          type: string
      example:
        _type: SimulatorApi
        package: biosimulators_tellurium
        module: biosimulators_tellurium
        version: 0.1.0
    SimulationRunOutput:
      title: Root Type for SimulationRunOutput
      description: "Results of a SED-ML output (e.g, report, plot)."
      required:
      - outputId
      - type
      - data
      type: object
      properties:
        _type:
          description: Type
          enum:
          - SimulationRunOutput
          type: string
        outputId:
          description: "Forward slash-separated tuple of the location of the parent\
            \ SED-ML document and the id of the output (e.g, `simulation.sedml/report`)."
          type: string
        name:
          description: Name of the output.
          type: string
        type:
          description: Type of the output.
          enum:
          - SedReport
          - SedPlot2D
          - SedPlot3d
          type: string
        data:
          description: Results of the output.
          type: array
          items:
            $ref: '#/components/schemas/SimulationRunOutputDatum'
      example:
        _type: SimulationRunOutput
        outputId: report
        name: Report
        type: SedReport
        data: []
    SimulationRunOutputDatum:
      title: Root Type for SimulationRunOutputDatum
      description: Result of a dataset of a SED-ML report or a data generator involved
        in a SED-ML plot.
      required:
      - _type
      - id
      - label
      type: object
      properties:
        _type:
          description: Type
          enum:
          - SimulationRunOutputDatum
          type: string
        id:
          description: Id of the datum
          type: string
        label:
          description: Label of the datum.
          type: string
        name:
          description: Name of the datum.
          type: string
        shape:
          description: Shape of `values`.
          type: string
        type:
          description: Data type of `values`.
          type: string
        values:
          description: Result of the datum.
          type: array
          items: {}
      example:
        _type: SimulationRunOutputDatum
        id: atp
        label: ATP
        name: ATP
        shape: "1001"
        type: float64
        values:
        - 5
        - 4.9
        - 4.95
        - 4.97
        - 5.03
        - 5.01
    Environment:
      title: Root Type for Environment
      description: Set of environment variables.
      required:
      - _type
      type: object
      properties:
        _type:
          description: Type
          enum:
          - Environment
          type: string
        variables:
          description: Values of environment variables.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
      example:
        _type: Environment
        variables: []
    GetCombineArchiveMetadataFileOrUrl:
      description: "File or a URL for getting the information in an [OMEX Metadata](https://sys-bio.github.io/libOmexMeta/)\
        \ document"
      required:
      - omexMetadataFormat
      type: object
      properties:
        file:
          $ref: '#/components/schemas/File'
          description: File.
        url:
          $ref: '#/components/schemas/Url'
          description: URL
        omexMetadataFormat:
          description: |-
            OMEX Metadata format

            Default: `rdfxml`
          enum:
          - ntriples
          - nquads
          - rdfa
          - rdfxml
          - turtle
          type: string
      example:
        file: <FILE>
        omexMetadataFormat: rdfxml
    ValidateCombineArchiveFileOrUrl:
      description: File or a URL for getting the metadata in a COMBINE/OMEX archive.
      required:
      - omexMetadataFormat
      - omexMetadataSchema
      type: object
      properties:
        file:
          $ref: '#/components/schemas/File'
          description: File.
        url:
          $ref: '#/components/schemas/Url'
          description: URL
        omexMetadataFormat:
          description: OMEX Metadata format
          enum:
          - ntriples
          - nquads
          - rdfa
          - rdfxml
          - turtle
          type: string
        validateOmexManifest:
          description: |-
            Whether to validate the manifest of the archive.

            Default: `true`.
          type: boolean
        omexMetadataSchema:
          description: OMEX Metadata schema
          enum:
          - BioSimulations
          - rdf_triples
          type: string
        validateSedml:
          description: |-
            Whether to validate the SED-ML files in the archive.

            Default: `true`.
          type: boolean
        validateSedmlModels:
          description: |-
            Whether to validate the source (e.g., CellML, SBML file) of each model of each SED-ML file in
            the archive.

            Default: `true`.
          type: boolean
        validateOmexMetadata:
          description: |-
            Whether to validate the OMEX Metadata files in the archive according to [BioSimulators'
            conventions](https://biosimulators.org/conventions/metadata).

            Default: `true`.
          type: boolean
        validateImages:
          description: |-
            Whether to validate the image (BMP, GIF, PNG, JPEG, TIFF, WEBP) files in the archive.

            Default: `true`.
          type: boolean
      example:
        file: <FILE>
        omexMetadataFormat: rdfxml
        omexMetadataSchema: rdf_triples
    ValidateModelFileOrUrl:
      description: File or a URL for validating a model.
      required:
      - language
      type: object
      properties:
        file:
          $ref: '#/components/schemas/File'
          description: File.
        url:
          $ref: '#/components/schemas/Url'
          description: URL
        language:
          description: Language of the model
          enum:
          - BNGL
          - CellML
          - LEMS
          - NeuroML
          - RBA
          - SBML
          - Smoldyn
          - XPP
          type: string
      example:
        file: <FILE>
        language: SBML
    ValidateOmexMetadataFileOrUrl:
      description: File or a URL for validating an OMEX Metadata document.
      required:
      - format
      - schema
      type: object
      properties:
        file:
          $ref: '#/components/schemas/File'
          description: File.
        url:
          $ref: '#/components/schemas/Url'
          description: URL
        format:
          description: Format of the document
          enum:
          - ntriples
          - nquads
          - rdfa
          - rdfxml
          - turtle
          type: string
        schema:
          description: "Schema for validating OMEX Metadata files. The RDF schema,\
            \ allows all semantic triples. The [BioSimulations schema](https://biosimulators.org/conventions/metadata)\
            \ imposes additional requirements for minimal metadata about simulation\
            \ projects. The BioSimulations schema is required for publishing projects\
            \ to BioSimulations."
          enum:
          - rdf_triples
          - BioSimulations
          type: string
      example:
        file: <FILE>
        format: rdfxml
        schema: BioSimulations
    Health:
      title: Root Type for Health
      description: Information about the status of the service
      required:
      - status
      type: object
      properties:
        status:
          description: Summary of the status of the service
          enum:
          - ok
          type: string
          example: ok
      example:
        status: ok
    SedRemoveElementModelChange:
      description: Removal of an element from a model
      required:
      - _type
      - target
      - id
      type: object
      properties:
        _type:
          description: Type.
          enum:
          - SedRemoveElementModelChange
          type: string
        target:
          $ref: '#/components/schemas/SedTarget'
          description: Target
        id:
          description: Unique identifier within its parents SED document.
          type: string
        name:
          description: Brief description
          type: string
      example:
        _type: SedRemoveElementModelChange
        id: remove_parameter_k1
        name: remove parameter k1
        target:
          _type: SedTarget
          value: "/sbml:sbml/sbml:model/sbml:listOfParameters/sbml:parameter[@id='k1']"
          namespaces:
          - _type: Namespace
            prefix: sbml
            uri: http://www.sbml.org/sbml/level3/version1/core
    SedAddElementModelChange:
      description: Addition of an element to a model
      required:
      - _type
      - newElements
      - target
      - id
      type: object
      properties:
        _type:
          description: Type.
          enum:
          - SedAddElementModelChange
          type: string
        target:
          $ref: '#/components/schemas/SedTarget'
          description: Target
        id:
          description: Unique identifier within its parents SED document.
          type: string
        name:
          description: Brief description
          type: string
        newElements:
          description: Children that should be appended to the target.
          type: array
          items:
            type: string
      example:
        _type: SedAddElementModelChange
        id: add parameter_k2
        name: add parameter k2
        target:
          _type: SedTarget
          value: /sbml:sbml/sbml:model/sbml:listOfParameters
          namespaces:
          - _type: Namespace
            prefix: sbml
            uri: http://www.sbml.org/sbml/level3/version1/core
        newElements:
        - <parameter id='k2' value='1.1'/>
    SedParameter:
      title: Root Type for SedParameter
      description: Parameter of a calculation
      required:
      - value
      - id
      - _type
      type: object
      properties:
        id:
          description: Unique identifier within its parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        value:
          description: Value of the parameter
          type: number
        _type:
          description: Type
          enum:
          - SedParameter
          type: string
      example:
        type: SedParameter
        id: k1
        name: k1
        value: 2
    SedReplaceElementModelChange:
      description: Replacement of an element of a model
      required:
      - _type
      - newElements
      - target
      - id
      type: object
      properties:
        _type:
          description: Type.
          enum:
          - SedReplaceElementModelChange
          type: string
        target:
          $ref: '#/components/schemas/SedTarget'
          description: Target
        id:
          description: Unique identifier within its parents SED document.
          type: string
        name:
          description: Brief description
          type: string
        newElements:
          description: Elements which should replace the target.
          type: array
          items:
            type: string
      example:
        _type: SedReplaceElementModelChange
        id: replace_parameter_k1
        name: replace parameter k1
        target:
          _type: SedTarget
          value: "/sbml:sbml/sbml:model/sbml:listOfParameters/sbml:parameter[@id='k1']"
          namespaces:
          - _type: Namespace
            prefix: sbml
            uri: http://www.sbml.org/sbml/level3/version1/core
        newElements:
        - <parameter id='k1' value='1.1'/>
    SedAbstractTask:
      oneOf:
      - $ref: '#/components/schemas/SedTask'
      - $ref: '#/components/schemas/SedRepeatedTask'
      discriminator:
        propertyName: _type
      description: A SED abstract task.
      type: object
      example:
        _type: SedTask
        id: task
        name: Task
        model: model
        simulation: koSimulation
    SedComputeModelChange:
      description: Change an attribute of an element of a model based on a calculation
      required:
      - _type
      - target
      - id
      - math
      - variables
      - parameters
      type: object
      properties:
        _type:
          description: Type.
          enum:
          - SedComputeModelChange
          type: string
        target:
          $ref: '#/components/schemas/SedTarget'
          description: Target
        id:
          description: Unique identifier within its parents SED document.
          type: string
        name:
          description: Brief description
          type: string
        parameters:
          description: Parameters.
          type: array
          items:
            $ref: '#/components/schemas/SedParameter'
        variables:
          description: Variables.
          type: array
          items:
            $ref: '#/components/schemas/SedVariable'
        math:
          description: Mathematical expression for its new value.
          type: string
      example:
        _type: SedComputeModelChange
        id: change_parameter_k1
        name: change parameter k1
        target:
          _type: SedTarget
          value: "/sbml:sbml/sbml:model/sbml:listOfParameters/sbml:parameter[@id='k1']/@value"
          namespaces:
          - _type: Namespace
            prefix: sbml
            uri: http://www.sbml.org/sbml/level3/version1/core
        variables:
        - _type: SedVariable
          id: time
          name: Time
          task: task
          symbol: urn:sedml:symbol:time
        parameters:
        - _type: SedParameter
          id: min_to_sec
          name: minutes to seconds
          value: 60
        math: min_to_sec * time
    SedCurve:
      description: Curve of a 2D SED plot
      required:
      - id
      - xDataGenerator
      - yDataGenerator
      - _type
      type: object
      properties:
        id:
          description: Unique identifier with its parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        xDataGenerator:
          description: Identifier of the data generator for the x data of the curve.
          type: string
        yDataGenerator:
          description: Identifier of the data generator for the y data of the curve.
          type: string
        _type:
          description: Type.
          enum:
          - SedCurve
          type: string
      example:
        _type: SedCurve
        id: atp_dynamics
        name: ATP dynamics
        xDataGenerator: data_generator_time
        yDataGenerator: data_generator_atp
    SedDataGenerator:
      description: Data generator for SED report or plot.
      required:
      - id
      - math
      - parameters
      - variables
      - _type
      type: object
      properties:
        id:
          description: Unique identifier within its parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        parameters:
          description: Parameters.
          type: array
          items:
            $ref: '#/components/schemas/SedParameter'
        variables:
          description: Variables.
          type: array
          items:
            $ref: '#/components/schemas/SedVariable'
        math:
          description: Mathematical expression for its value.
          type: string
        _type:
          description: Type.
          enum:
          - SedDataGenerator
          type: string
      example:
        _type: SedDataGenerator
        id: data_generator_time
        name: Time
        parameters:
        - _type: SedParameter
          id: min_to_sec
          name: minutes to seconds
          value: 60
        variables:
        - _type: SedVariable
          id: time
          name: Time
          task: task
          symbol: urn:sedml:symbol:time
        math: min_to_sec * time
    SedDataSet:
      description: A SED data set
      required:
      - id
      - label
      - dataGenerator
      - _type
      type: object
      properties:
        id:
          description: Unique identifier within its parent SED document.
          type: string
        label:
          description: Brief description
          type: string
        name:
          description: Brief description.
          type: string
        dataGenerator:
          description: Id of the data generator which provides the data for the data
            set.
          type: string
        _type:
          description: Type.
          enum:
          - SedDataSet
          type: string
      example:
        _type: SedDataSet
        id: data_set_time
        name: Time
        label: Time
        dataGenerator: data_generator_time
    SedOutput:
      oneOf:
      - $ref: '#/components/schemas/SedPlot2D'
      - $ref: '#/components/schemas/SedPlot3D'
      - $ref: '#/components/schemas/SedReport'
      discriminator:
        propertyName: _type
      description: An output of a SED document.
      type: object
      example:
        _type: SedReport
        id: report
        name: Report
        dataSets:
        - _type: SedDataSet
          id: data_set_atp
          name: ATP
          label: ATP
          dataGenerator: data_generator_atp
    SedPlot2D:
      description: Specifications for a 2D SED plot.
      required:
      - id
      - curves
      - xScale
      - yScale
      - _type
      type: object
      properties:
        id:
          description: Unique identifier within its parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        curves:
          description: List of the curves of the plot (tuples of x and y data).
          type: array
          items:
            $ref: '#/components/schemas/SedCurve'
        xScale:
          $ref: '#/components/schemas/SedAxisScale'
          description: Scale of the x axis.
        yScale:
          $ref: '#/components/schemas/SedAxisScale'
          description: Scale of the y axis.
        _type:
          description: Type of the plot.
          enum:
          - SedPlot2D
          type: string
      example:
        _type: SedPlot2D
        id: ntp_dynamics
        name: NTP dynamics
        curves:
        - _type: SedCurve
          id: atp_dynamics
          name: ATP dynamics
          xDataGenerator: data_generator_time
          yDataGenerator: data_generator_atp
        xScale: linear
        yScale: log
    SedPlot3D:
      description: Specifications for a 3D surface plot.
      required:
      - id
      - surfaces
      - xScale
      - yScale
      - zScale
      - _type
      type: object
      properties:
        id:
          description: Unique id within its parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        surfaces:
          description: "List of surfaces (tuples of x, y, and z data)."
          type: array
          items:
            $ref: '#/components/schemas/SedSurface'
        xScale:
          $ref: '#/components/schemas/SedAxisScale'
          description: Scale of the x axis.
        yScale:
          $ref: '#/components/schemas/SedAxisScale'
          description: Scale of the y axis.
        zScale:
          $ref: '#/components/schemas/SedAxisScale'
          description: Scale of the z axis.
        _type:
          description: Type of the output.
          enum:
          - SedPlot3D
          type: string
      example:
        _type: SedPlot3D
        id: plot
        name: Plot
        surfaces:
        - _type: SedSurface
          id: atp_concentration
          name: ATP concentration
          xDataGenerator: data_generator_x
          yDataGenerator: data_generator_y
          zDataGenerator: data_generator_atp
        xScale: linear
        yScale: linear
        zScale: log
    SedReport:
      description: A SED report.
      required:
      - id
      - _type
      - dataSets
      type: object
      properties:
        id:
          description: Unique identifier within its parent SED document.
          type: string
        _type:
          description: Type of the output.
          enum:
          - SedReport
          type: string
        name:
          description: Brief description.
          type: string
        dataSets:
          description: List of the data sets of the report (rows of the report).
          type: array
          items:
            $ref: '#/components/schemas/SedDataSet'
      example:
        _type: SedReport
        id: report
        name: Report
        dataSets:
        - _type: SedDataSet
          id: data_set_atp
          name: ATP
          label: ATP
          dataGenerator: data_generator_atp
    SedSurface:
      description: A surface a 3D plot.
      required:
      - id
      - xDataGenerator
      - yDataGenerator
      - zDataGenerator
      - _type
      type: object
      properties:
        id:
          description: Unique identifier within its parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        xDataGenerator:
          description: Identifier of the data generator for the x data of the surface.
          type: string
        yDataGenerator:
          description: Identifier of the data generator for the y data of the surface.
          type: string
        zDataGenerator:
          description: Identifier of the data generator for the z data of the surface.
          type: string
        _type:
          description: Type.
          enum:
          - SedSurface
          type: string
      example:
        _type: SedSurface
        id: atp_concentration
        name: ATP concentration
        xDataGenerator: data_generator_x
        yDataGenerator: data_generator_y
        zDataGenerator: data_generator_atp
    SedTask:
      description: A SED task.
      required:
      - id
      - model
      - simulation
      - _type
      type: object
      properties:
        id:
          description: Unique identifier within is parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        model:
          description: Identifier of the model.
          type: string
        simulation:
          description: Identifier of the simulation.
          type: string
        _type:
          description: Type.
          enum:
          - SedTask
          type: string
      example:
        _type: SedTask
        id: task
        name: Task
        model: model
        simulation: koSimulation
    SedVariable:
      description: A SED variable.
      required:
      - id
      - task
      - _type
      type: object
      properties:
        id:
          description: Unique identifier within its parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        task:
          description: Task.
          type: string
        target:
          $ref: '#/components/schemas/SedTarget'
          description: "Target within a model (e.g., of a variable explicitly defined\
            \ in the specification of a model, such as the concentration of a species)."
        symbol:
          description: "Symbol (e.g., for an implicit variable that is not explicitly\
            \ defined in the specification of a model, such as time)."
          type: string
        _type:
          description: Type.
          enum:
          - SedVariable
          type: string
        model:
          description: Identifier of the model from which the variable should be recorded
          type: string
      example:
        id: atp
        name: ATP
        task: task
        symbol: urn:sedml:symbol:time
        _type: SedVariable
    SedUniformRange:
      description: Uniform range
      required:
      - _type
      - end
      - start
      - numberOfSteps
      - id
      - type
      type: object
      properties:
        _type:
          description: Type
          enum:
          - SedUniformRange
          type: string
        id:
          description: Unique identifier within is parent SED document.
          type: string
        name:
          description: Brief description
          type: string
        start:
          description: First value
          type: number
        end:
          description: Last value
          type: number
        numberOfSteps:
          description: "Number of steps, equal to the 1 less than the number of iterations."
          minimum: 1
          type: integer
        type:
          description: Type
          enum:
          - linear
          - log
          type: string
      example:
        _type: SedUniformRange
        id: range
        name: range
        start: 0
        end: 10
        numberOfSteps: 10
        type: linear
    SedRange:
      oneOf:
      - $ref: '#/components/schemas/SedUniformRange'
      - $ref: '#/components/schemas/SedVectorRange'
      - $ref: '#/components/schemas/SedFunctionalRange'
      description: Range
      type: object
      example:
        _type: SedUniformRange
        id: range
        name: range
        start: 0
        end: 10
        numberOfSteps: 10
        type: linear
    SedVectorRange:
      description: Vector range
      required:
      - _type
      - id
      - values
      type: object
      properties:
        _type:
          description: Type
          enum:
          - SedVectorRange
          type: string
        id:
          description: Unique identifier within is parent SED document.
          type: string
        name:
          description: Brief description
          type: string
        values:
          description: Value of each iteration of the range
          type: array
          items:
            type: number
      example:
        _type: SedVectorRange
        id: range
        name: range
        values:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
    SedFunctionalRange:
      description: Functional range
      required:
      - _type
      - id
      - range
      - parameters
      - variables
      - math
      type: object
      properties:
        _type:
          description: Type
          enum:
          - SedFunctionalRange
          type: string
        id:
          description: Unique identifier within is parent SED document.
          type: string
        name:
          description: Brief description
          type: string
        range:
          description: Range over which the mathematical expression should be evaluated
          type: string
        parameters:
          description: Parameters of the mathematical expression
          type: array
          items:
            $ref: '#/components/schemas/SedParameter'
        variables:
          description: Variables of the mathematical expression
          type: array
          items:
            $ref: '#/components/schemas/SedVariable'
        math:
          description: Mathematical expression
          type: string
      example:
        _type: SedFunctionalRange
        id: functional_range
        name: functional range
        range: vector_range
        parameters:
        - _type: SedParameter
          id: p
          value: 1
        variables:
        - _type: SedVariable
          id: t
          task: task
          symbol: urn:sedml:symbol:time
        math: p * vector_range + t
    SedSubTask:
      description: Sub task of a repeated task
      required:
      - task
      - order
      - _type
      type: object
      properties:
        task:
          description: Identifier of the task.
          type: string
        order:
          description: Order of the subtask within its parent repeated task.
          type: number
        _type:
          description: Type
          enum:
          - SedSubTask
          type: string
      example:
        _type: SedSubTask
        task: time_course_simulation
        order: 1
    SedRepeatedTask:
      description: A SED repeated task.
      required:
      - id
      - _type
      - ranges
      - resetModelForEachIteration
      - subTasks
      - range
      - changes
      type: object
      properties:
        id:
          description: Unique identifiers with its parent SED document.
          type: string
        name:
          description: Brief description.
          type: string
        _type:
          description: Type.
          enum:
          - SedRepeatedTask
          type: string
        range:
          description: Main range which defines the iterations of the task
          type: string
        ranges:
          description: Child ranges of the task
          type: array
          items:
            $ref: '#/components/schemas/SedRange'
        resetModelForEachIteration:
          description: Whether to accumulate changes to models over iterations of
            the task or to begin each iteration from the same models
          type: boolean
        changes:
          description: Changes to apply to models at each iteration of the task
          type: array
          items:
            $ref: '#/components/schemas/SedSetValueComputeModelChange'
        subTasks:
          description: Component tasks of the repeated task
          type: array
          items:
            $ref: '#/components/schemas/SedSubTask'
      example:
        _type: SedRepeatedTask
        id: repeated_task
        name: Repeated task
        ranges:
        - _type: SedUniformRange
          id: main_range
          start: 0
          end: 10
          numberOfSteps: 10
          type: linear
        range: main_range
        resetModelForEachIteration: true
        subTasks:
        - _type: SedSubTask
          task: basic_task_1
          order: 1
        - _type: SedSubTask
          task: basic_task_2
          order: 2
        changes: []
    SedSetValueComputeModelChange:
      description: Dynamic change to an attribute of a model
      required:
      - _type
      - id
      - model
      - target
      - parameters
      - variables
      - math
      type: object
      properties:
        _type:
          description: Type.
          enum:
          - SedSetValueComputeModelChange
          type: string
        id:
          description: Unique identifier within its parents SED document.
          type: string
        name:
          description: Brief description
          type: string
        model:
          description: Identifier of the model to modify
          type: string
        target:
          $ref: '#/components/schemas/SedTarget'
          description: Target within the model to modify
        symbol:
          description: Symbol within the model to modify
          type: string
        parameters:
          description: Parameters of the mathematical expression
          type: string
        variables:
          description: Variables of the mathematical expression
          type: string
        range:
          description: Identifier for the range used in the mathematical expression
          type: string
        math:
          description: Mathematical expression
          type: string
      example:
        _type: SedSetValueComputeModelChange
        id: modify_parameter_k1
        name: modify parameter k1
        model: model
        target:
          _type: SedTarget
          value: "/sbml:sbml/sbml:model/sbml:listOfParameters/sbml:parameter[@id='k1']"
          namespaces:
          - _type: Namespace
            prefix: sbml
            uri: http://www.sbml.org/sbml/level3/version1/core
        parameters:
        - _type: SedParameter
          id: p
          value: 2
        variables: []
        range: range
        math: p* range
    CombineArchiveLog:
      required:
      - status
      - exception
      - skipReason
      - output
      - duration
      - sedDocuments
      type: object
      properties:
        status:
          enum:
          - QUEUED
          - RUNNING
          - SKIPPED
          - SUCCEEDED
          - FAILED
          - UNKNOWN
          type: string
        exception:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        skipReason:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        output:
          nullable: true
          type: string
          example: |
            Reading model ... done
            Executing model ... done
            Saving results ... done
        duration:
          nullable: true
          type: number
          example: 10.5
        sedDocuments:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/SedDocumentLog'
    Exception:
      required:
      - type
      - message
      type: object
      properties:
        type:
          type: string
          example: FileNotFoundError
        message:
          type: string
          example: File 'model.xml' does not exist.
    SedDocumentLog:
      required:
      - location
      - status
      - exception
      - skipReason
      - output
      - duration
      - tasks
      - outputs
      type: object
      properties:
        location:
          type: string
        status:
          enum:
          - QUEUED
          - RUNNING
          - SKIPPED
          - SUCCEEDED
          - FAILED
          - UNKNOWN
          type: string
        exception:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        skipReason:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        output:
          nullable: true
          type: string
          example: |
            Reading model ... done
            Executing model ... done
            Saving results ... done
        duration:
          nullable: true
          type: number
          example: 10.5
        tasks:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/SedTaskLog'
        outputs:
          nullable: true
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/SedReportLog'
            - $ref: '#/components/schemas/SedPlot2DLog'
            - $ref: '#/components/schemas/SedPlot3DLog'
    SedTaskLog:
      required:
      - id
      - status
      - exception
      - skipReason
      - output
      - duration
      - algorithm
      - simulatorDetails
      type: object
      properties:
        id:
          type: string
        status:
          enum:
          - QUEUED
          - RUNNING
          - SKIPPED
          - SUCCEEDED
          - FAILED
          - UNKNOWN
          type: string
        exception:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        skipReason:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        output:
          nullable: true
          type: string
          example: |
            Reading model ... done
            Executing model ... done
            Saving results ... done
        duration:
          nullable: true
          type: number
          example: 10.5
        algorithm:
          nullable: true
          description: KiSAO id of the simulation algorithm that was executed
          type: string
          example: KISAO_0000019
        simulatorDetails:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/SimulatorDetail'
    SedReportLog:
      required:
      - id
      - status
      - exception
      - skipReason
      - output
      - duration
      - dataSets
      type: object
      properties:
        id:
          type: string
        status:
          enum:
          - QUEUED
          - RUNNING
          - SKIPPED
          - SUCCEEDED
          - FAILED
          - UNKNOWN
          type: string
        exception:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        skipReason:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        output:
          nullable: true
          type: string
          example: |
            Reading model ... done
            Executing model ... done
            Saving results ... done
        duration:
          nullable: true
          type: number
          example: 10.5
        dataSets:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/SedOutputElementLog'
    SedPlot2DLog:
      required:
      - id
      - status
      - exception
      - skipReason
      - output
      - duration
      - curves
      type: object
      properties:
        id:
          type: string
        status:
          enum:
          - QUEUED
          - RUNNING
          - SKIPPED
          - SUCCEEDED
          - FAILED
          - UNKNOWN
          type: string
        exception:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        skipReason:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        output:
          nullable: true
          type: string
          example: |
            Reading model ... done
            Executing model ... done
            Saving results ... done
        duration:
          nullable: true
          type: number
          example: 10.5
        curves:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/SedOutputElementLog'
    SedPlot3DLog:
      required:
      - id
      - status
      - exception
      - skipReason
      - output
      - duration
      - surfaces
      type: object
      properties:
        id:
          type: string
        status:
          enum:
          - QUEUED
          - RUNNING
          - SKIPPED
          - SUCCEEDED
          - FAILED
          - UNKNOWN
          type: string
        exception:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        skipReason:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Exception'
        output:
          nullable: true
          type: string
          example: |
            Reading model ... done
            Executing model ... done
            Saving results ... done
        duration:
          nullable: true
          type: number
          example: 10.5
        surfaces:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/SedOutputElementLog'
    SimulatorDetail:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
          example: arguments
        value:
          type: object
          example:
            relTol: 1.0E-6
            absTol: 1.0E-8
    SedOutputElementLog:
      required:
      - id
      - status
      type: object
      properties:
        id:
          type: string
        status:
          enum:
          - QUEUED
          - RUNNING
          - SKIPPED
          - SUCCEEDED
          - FAILED
          - UNKNOWN
          type: string
  responses:
    "404":
      content:
        application/json: {}
      description: The selected resource was not found
tags:
- name: Simulation projects
  description: "Operations on [COMBINE/OMEX archives](https://combinearchive.org/)"
- name: Models
  description: "Operations on model files (e.g., [CellML](https://cellml.org/), [SBML](http://sbml.org/))"
- name: Simulation experiments
  description: "Operations on [Simulation Experiment Description Language (SED-ML)](https://sed-ml.org/)\
    \ files"
- name: Simulation algorithms
  description: "Operations on the [Kinetic Simulation Algorithm Ontology (KiSAO)](https://github.com/SED-ML/KiSAO)"
- name: Metadata
  description: "Operations on [OMEX Metadata](https://sys-bio.github.io/libOmexMeta/)\
    \ files"
- name: Validation
  description: "Operations for validating models, simulation experiments, metadata,\
    \ and simulation projects"
- name: Simulation execution
  description: Operations for executing simulation projects
- name: Health
  description: Get information about whether the service is up or down.
